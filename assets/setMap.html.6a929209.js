import{e as n}from"./app.32025e09.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},p=n(`<h1 id="set-\u548C-map-\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#set-\u548C-map-\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> Set \u548C Map \u6570\u636E\u7ED3\u6784</h1><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h2><p>ES6 \u63D0\u4F9B\u4E86\u65B0\u7684\u6570\u636E\u7ED3\u6784 Set\u3002\u5B83\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u4F46\u662F\u6210\u5458\u7684\u503C\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u6CA1\u6709\u91CD\u590D\u7684\u503C\u3002</p><p>Set\u672C\u8EAB\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 Set \u6570\u636E\u7ED3\u6784\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2 3 5 4</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u901A\u8FC7 <code>add()</code> \u65B9\u6CD5\u5411 Set \u7ED3\u6784\u52A0\u5165\u6210\u5458\uFF0C\u7ED3\u679C\u8868\u660E Set \u7ED3\u6784\u4E0D\u4F1A\u6DFB\u52A0\u91CD\u590D\u7684\u503C\u3002</p><p><code>Set</code> \u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\uFF08\u6216\u8005\u5177\u6709 iterable \u63A5\u53E3\u7684\u5176\u4ED6\u6570\u636E\u7ED3\u6784\uFF09\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7528\u6765\u521D\u59CB\u5316\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u4F8B\u4E00</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span>
<span class="token comment">// [1, 2, 3, 4]</span>

<span class="token comment">// \u4F8B\u4E8C</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
items<span class="token punctuation">.</span>size <span class="token comment">// 5</span>

<span class="token comment">// \u4F8B\u4E09</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span>size <span class="token comment">// 56</span>

<span class="token comment">// \u7C7B\u4F3C\u4E8E</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document
 <span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">div</span> <span class="token operator">=&gt;</span> set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span>size <span class="token comment">// 56</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4F8B\u4E00\u548C\u4F8B\u4E8C\u90FD\u662FSet\u51FD\u6570\u63A5\u53D7\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4F8B\u4E09\u662F\u63A5\u53D7\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002</p><p>\u4E0A\u9762\u4EE3\u7801\u4E5F\u5C55\u793A\u4E86\u4E00\u79CD\u53BB\u9664\u6570\u7EC4\u91CD\u590D\u6210\u5458\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u53BB\u9664\u6570\u7EC4\u7684\u91CD\u590D\u6210\u5458</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u65B9\u6CD5\u4E5F\u53EF\u4EE5\u7528\u4E8E\uFF0C\u53BB\u9664\u5B57\u7B26\u4E32\u91CC\u9762\u7684\u91CD\u590D\u5B57\u7B26\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">&#39;ababbc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;abc&quot;</span>
</code></pre></div><p>\u5411 Set \u52A0\u5165\u503C\u7684\u65F6\u5019\uFF0C\u4E0D\u4F1A\u53D1\u751F\u7C7B\u578B\u8F6C\u6362\uFF0C\u6240\u4EE5 <code>5</code> \u548C <code>&quot;5&quot;</code> \u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u503C\u3002Set \u5185\u90E8\u5224\u65AD\u4E24\u4E2A\u503C\u662F\u5426\u4E0D\u540C\uFF0C\u4F7F\u7528\u7684\u7B97\u6CD5\u53EB\u505A\u201CSame-value-zero equality\u201D\uFF0C\u5B83\u7C7B\u4F3C\u4E8E\u7CBE\u786E\u76F8\u7B49\u8FD0\u7B97\u7B26\uFF08<code>===</code>\uFF09\uFF0C\u4E3B\u8981\u7684\u533A\u522B\u662F\u5411 Set \u52A0\u5165\u503C\u65F6\u8BA4\u4E3A <code>NaN</code> \u7B49\u4E8E\u81EA\u8EAB\uFF0C\u800C\u7CBE\u786E\u76F8\u7B49\u8FD0\u7B97\u7B26\u8BA4\u4E3A\`\`NaN\` \u4E0D\u7B49\u4E8E\u81EA\u8EAB\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">NaN</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">NaN</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span> <span class="token comment">// Set {NaN}</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u5411 Set \u5B9E\u4F8B\u6DFB\u52A0\u4E86\u4E24\u6B21 <code>NaN</code>\uFF0C\u4F46\u662F\u53EA\u4F1A\u52A0\u5165\u4E00\u4E2A\u3002\u8FD9\u8868\u660E\uFF0C\u5728 Set \u5185\u90E8\uFF0C\u4E24\u4E2A <code>NaN</code> \u662F\u76F8\u7B49\u7684\u3002</p><p>\u53E6\u5916\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u603B\u662F\u4E0D\u76F8\u7B49\u7684\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span>size <span class="token comment">// 1</span>

set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u8868\u793A\uFF0C\u7531\u4E8E\u4E24\u4E2A\u7A7A\u5BF9\u8C61\u4E0D\u76F8\u7B49\uFF0C\u6240\u4EE5\u5B83\u4EEC\u88AB\u89C6\u4E3A\u4E24\u4E2A\u503C\u3002</p><h3 id="set\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#set\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> Set\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</h3><p>set \u7ED3\u6784\u7684\u5B9E\u4F8B\u6709\u4EE5\u4E0B\u5C5E\u6027\u3002</p><ul><li><code>Set.prototype.constructor</code>\uFF1A\u6784\u9020\u51FD\u6570\uFF0C\u9ED8\u8BA4\u5C31\u662F<code>Se</code>t\u51FD\u6570\u3002</li><li><code>Set.prototype.size</code>\uFF1A\u8FD4\u56DESet\u5B9E\u4F8B\u7684\u6210\u5458\u603B\u6570\u3002</li></ul><p>Set \u5B9E\u4F8B\u7684\u65B9\u6CD5\u5206\u4E3A\u4E24\u5927\u7C7B\uFF1A\u64CD\u4F5C\u65B9\u6CD5\uFF08\u7528\u4E8E\u64CD\u4F5C\u6570\u636E\uFF09\u548C\u904D\u5386\u65B9\u6CD5\uFF08\u7528\u4E8E\u904D\u5386\u6210\u5458\uFF09\u3002\u4E0B\u9762\u5148\u4ECB\u7ECD\u56DB\u4E2A\u64CD\u4F5C\u65B9\u6CD5\u3002</p><ul><li>Set.prototype.add(value)\uFF1A\u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE Set \u7ED3\u6784\u672C\u8EAB\u3002</li><li>Set.prototype.delete(value)\uFF1A\u5220\u9664\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5220\u9664\u662F\u5426\u6210\u529F\u3002</li><li>Set.prototype.has(value)\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u8BE5\u503C\u662F\u5426\u4E3ASet\u7684\u6210\u5458\u3002</li><li>Set.prototype.clear()\uFF1A\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code>s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6CE8\u610F2\u88AB\u52A0\u5165\u4E86\u4E24\u6B21</span>

s<span class="token punctuation">.</span>size <span class="token comment">// 2</span>

s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5BF9\u6BD4\uFF0C\u770B\u770B\u5728\u5224\u65AD\u662F\u5426\u5305\u62EC\u4E00\u4E2A\u952E\u4E0A\u9762\uFF0C<code>Object</code>\u7ED3\u6784\u548C<code>Set</code>\u7ED3\u6784\u7684\u5199\u6CD5\u4E0D\u540C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u8C61\u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> properties <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;width&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token string">&#39;height&#39;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>properties<span class="token punctuation">[</span>someName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span>

<span class="token comment">// Set\u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

properties<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
properties<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>someName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>Array.from</code> \u65B9\u6CD5\u53EF\u4EE5\u5C06 Set \u7ED3\u6784\u8F6C\u4E3A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> array <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u904D\u5386\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u64CD\u4F5C" aria-hidden="true">#</a> \u904D\u5386\u64CD\u4F5C</h2><p>Set \u7ED3\u6784\u7684\u5B9E\u4F8B\u6709\u56DB\u4E2A\u904D\u5386\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u7528\u4E8E\u904D\u5386\u6210\u5458\u3002</p><ul><li><code>Set.prototype.keys()</code>\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668</li><li><code>Set.prototype.values()</code>\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668</li><li><code>Set.prototype.entries()</code>\uFF1A\u8FD4\u56DE\u952E\u503C\u5BF9\u7684\u904D\u5386\u5668</li><li><code>Set.prototype.forEach()</code>\uFF1A\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\u904D\u5386\u6BCF\u4E2A\u6210\u5458</li></ul><p>\u9700\u8981\u7279\u522B\u6307\u51FA\u7684\u662F\uFF0CSet\u7684\u904D\u5386\u987A\u5E8F\u5C31\u662F\u63D2\u5165\u987A\u5E8F\u3002\u8FD9\u4E2A\u7279\u6027\u6709\u65F6\u975E\u5E38\u6709\u7528\uFF0C\u6BD4\u5982\u4F7F\u7528 Set \u4FDD\u5B58\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u5217\u8868\uFF0C\u8C03\u7528\u65F6\u5C31\u80FD\u4FDD\u8BC1\u6309\u7167\u6DFB\u52A0\u987A\u5E8F\u8C03\u7528\u3002</p><p>\uFF081\uFF09<code>keys()</code>\uFF0C<code>values()</code>\uFF0C<code>entries()</code></p><p><code>keys</code>\u65B9\u6CD5\u3001<code>values</code>\u65B9\u6CD5\u3001<code>entries</code>\u65B9\u6CD5\u8FD4\u56DE\u7684\u90FD\u662F\u904D\u5386\u5668\u5BF9\u8C61\uFF08\u8BE6\u89C1\u300AIterator \u5BF9\u8C61\u300B\u4E00\u7AE0\uFF09\u3002\u7531\u4E8E Set \u7ED3\u6784\u6CA1\u6709\u952E\u540D\uFF0C\u53EA\u6709\u952E\u503C\uFF08\u6216\u8005\u8BF4\u952E\u540D\u548C\u952E\u503C\u662F\u540C\u4E00\u4E2A\u503C\uFF09\uFF0C\u6240\u4EE5<code>keys</code> \u65B9\u6CD5\u548C <code>values</code> \u65B9\u6CD5\u7684\u884C\u4E3A\u5B8C\u5168\u4E00\u81F4\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// red</span>
<span class="token comment">// green</span>
<span class="token comment">// blue</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// red</span>
<span class="token comment">// green</span>
<span class="token comment">// blue</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// [&quot;red&quot;, &quot;red&quot;]</span>
<span class="token comment">// [&quot;green&quot;, &quot;green&quot;]</span>
<span class="token comment">// [&quot;blue&quot;, &quot;blue&quot;]</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>entries</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u904D\u5386\u5668\uFF0C\u540C\u65F6\u5305\u62EC\u952E\u540D\u548C\u952E\u503C\uFF0C\u6240\u4EE5\u6BCF\u6B21\u8F93\u51FA\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5B83\u7684\u4E24\u4E2A\u6210\u5458\u5B8C\u5168\u76F8\u7B49\u3002</p><p>Set \u7ED3\u6784\u7684\u5B9E\u4F8B\u9ED8\u8BA4\u53EF\u904D\u5386\uFF0C\u5B83\u7684\u9ED8\u8BA4\u904D\u5386\u5668\u751F\u6210\u51FD\u6570\u5C31\u662F\u5B83\u7684<code>values</code>\u65B9\u6CD5\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C\u53EF\u4EE5\u7701\u7565 <code>values</code> \u65B9\u6CD5\uFF0C\u76F4\u63A5\u7528 <code>for...of</code> \u5FAA\u73AF\u904D\u5386 Set\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// red</span>
<span class="token comment">// green</span>
<span class="token comment">// blue</span>
</code></pre></div><p>\uFF082\uFF09<code>forEach()</code></p><p>Set \u7ED3\u6784\u7684\u5B9E\u4F8B\u4E0E\u6570\u7EC4\u4E00\u6837\uFF0C\u4E5F\u62E5\u6709 <code>forEach</code> \u65B9\u6CD5\uFF0C\u7528\u4E8E\u5BF9\u6BCF\u4E2A\u6210\u5458\u6267\u884C\u67D0\u79CD\u64CD\u4F5C\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&#39; : &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 1 : 1</span>
<span class="token comment">// 4 : 4</span>
<span class="token comment">// 9 : 9</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\uFF0C<code>forEach</code> \u65B9\u6CD5\u7684\u53C2\u6570\u5C31\u662F\u4E00\u4E2A\u5904\u7406\u51FD\u6570\u3002\u8BE5\u51FD\u6570\u7684\u53C2\u6570\u4E0E\u6570\u7EC4\u7684<code>forEach</code> \u4E00\u81F4\uFF0C\u4F9D\u6B21\u4E3A\u952E\u503C\u3001\u952E\u540D\u3001\u96C6\u5408\u672C\u8EAB\uFF08\u4E0A\u4F8B\u7701\u7565\u4E86\u8BE5\u53C2\u6570\uFF09\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\uFF0CSet \u7ED3\u6784\u7684\u952E\u540D\u5C31\u662F\u952E\u503C\uFF08\u4E24\u8005\u662F\u540C\u4E00\u4E2A\u503C\uFF09\uFF0C\u56E0\u6B64\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0E\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u503C\u6C38\u8FDC\u90FD\u662F\u4E00\u6837\u7684\u3002</p><p>\u53E6\u5916\uFF0C<code>forEach</code> \u65B9\u6CD5\u8FD8\u53EF\u4EE5\u6709\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u8868\u793A\u7ED1\u5B9A\u5904\u7406\u51FD\u6570\u5185\u90E8\u7684<code>this</code>\u5BF9\u8C61\u3002</p><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><h3 id="\u542B\u4E49\u548C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u542B\u4E49\u548C\u7528\u6CD5" aria-hidden="true">#</a> \u542B\u4E49\u548C\u7528\u6CD5</h3><p>JavaScript \u7684\u5BF9\u8C61\uFF08Object\uFF09\uFF0C\u672C\u8D28\u4E0A\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408\uFF08Hash \u7ED3\u6784\uFF09\uFF0C\u4F46\u662F\u4F20\u7EDF\u4E0A\u53EA\u80FD\u7528\u5B57\u7B26\u4E32\u5F53\u4F5C\u952E\u3002\u8FD9\u7ED9\u5B83\u7684\u4F7F\u7528\u5E26\u6765\u4E86\u5F88\u5927\u7684\u9650\u5236\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myDiv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

data<span class="token punctuation">[</span>element<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;metadata&#39;</span><span class="token punctuation">;</span>
data<span class="token punctuation">[</span><span class="token string">&#39;[object HTMLDivElement]&#39;</span><span class="token punctuation">]</span> <span class="token comment">// &quot;metadata&quot;</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u539F\u610F\u662F\u5C06\u4E00\u4E2A DOM \u8282\u70B9\u4F5C\u4E3A\u5BF9\u8C61 <code>data</code> \u7684\u952E\uFF0C\u4F46\u662F\u7531\u4E8E\u5BF9\u8C61\u53EA\u63A5\u53D7\u5B57\u7B26\u4E32\u4F5C\u4E3A\u952E\u540D\uFF0C\u6240\u4EE5 <code>element</code> \u88AB\u81EA\u52A8\u8F6C\u4E3A\u5B57\u7B26\u4E32 <code>[object HTMLDivElement]</code>\u3002</p><p>\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0CES6 \u63D0\u4F9B\u4E86 Map \u6570\u636E\u7ED3\u6784\u3002\u5B83\u7C7B\u4F3C\u4E8E\u5BF9\u8C61\uFF0C\u4E5F\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408\uFF0C\u4F46\u662F\u201C\u952E\u201D\u7684\u8303\u56F4\u4E0D\u9650\u4E8E\u5B57\u7B26\u4E32\uFF0C\u5404\u79CD\u7C7B\u578B\u7684\u503C\uFF08\u5305\u62EC\u5BF9\u8C61\uFF09\u90FD\u53EF\u4EE5\u5F53\u4F5C\u952E\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0CObject \u7ED3\u6784\u63D0\u4F9B\u4E86\u201C\u5B57\u7B26\u4E32\u2014\u503C\u201D\u7684\u5BF9\u5E94\uFF0CMap \u7ED3\u6784\u63D0\u4F9B\u4E86\u201C\u503C\u2014\u503C\u201D\u7684\u5BF9\u5E94\uFF0C\u662F\u4E00\u79CD\u66F4\u5B8C\u5584\u7684 Hash \u7ED3\u6784\u5B9E\u73B0\u3002\u5982\u679C\u4F60\u9700\u8981\u201C\u952E\u503C\u5BF9\u201D\u7684\u6570\u636E\u7ED3\u6784\uFF0CMap \u6BD4 Object \u66F4\u5408\u9002\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>p<span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// &quot;content&quot;</span>

m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u4F7F\u7528 Map \u7ED3\u6784\u7684 <code>set</code> \u65B9\u6CD5\uFF0C\u5C06\u5BF9\u8C61o\u5F53\u4F5Cm\u7684\u4E00\u4E2A\u952E\uFF0C\u7136\u540E\u53C8\u4F7F\u7528get\u65B9\u6CD5\u8BFB\u53D6\u8FD9\u4E2A\u952E\uFF0C\u63A5\u7740\u4F7F\u7528 <code>delete</code> \u65B9\u6CD5\u5220\u9664\u4E86\u8FD9\u4E2A\u952E\u3002</p><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u5982\u4F55\u5411 Map \u6DFB\u52A0\u6210\u5458\u3002\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\uFF0CMap \u4E5F\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u3002\u8BE5\u6570\u7EC4\u7684\u6210\u5458\u662F\u4E00\u4E2A\u4E2A\u8868\u793A\u952E\u503C\u5BF9\u7684\u6570\u7EC4\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Author&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

map<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;\u5F20\u4E09&quot;</span>
map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Author&quot;</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u5728\u65B0\u5EFA Map \u5B9E\u4F8B\u65F6\uFF0C\u5C31\u6307\u5B9A\u4E86\u4E24\u4E2A\u952E <code>name</code> \u548C <code>title</code>\u3002</p><h3 id="\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5</h3><p>Map \u7ED3\u6784\u7684\u5B9E\u4F8B\u6709\u4EE5\u4E0B\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5\u3002</p><p>\uFF081\uFF09size \u5C5E\u6027</p><p><code>size</code> \u5C5E\u6027\u8FD4\u56DE Map \u7ED3\u6784\u7684\u6210\u5458\u603B\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

map<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
</code></pre></div><p>\uFF082\uFF09Map.prototype.set(key, value)</p><p><code>set</code> \u65B9\u6CD5\u8BBE\u7F6E\u952E\u540D <code>key</code> \u5BF9\u5E94\u7684\u952E\u503C\u4E3Avalue\uFF0C\u7136\u540E\u8FD4\u56DE\u6574\u4E2A Map \u7ED3\u6784\u3002\u5982\u679C <code>key</code> \u5DF2\u7ECF\u6709\u503C\uFF0C\u5219\u952E\u503C\u4F1A\u88AB\u66F4\u65B0\uFF0C\u5426\u5219\u5C31\u65B0\u751F\u6210\u8BE5\u952E\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>        <span class="token comment">// \u952E\u662F\u5B57\u7B26\u4E32</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token string">&#39;standard&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// \u952E\u662F\u6570\u503C</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u952E\u662F undefined</span>
</code></pre></div><p>\uFF083\uFF09Map.prototype.get(key)</p><p><code>get</code> \u65B9\u6CD5\u8BFB\u53D6 <code>key</code> \u5BF9\u5E94\u7684\u952E\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230 <code>key</code>\uFF0C\u8FD4\u56DE <code>undefined</code>\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>hello<span class="token punctuation">,</span> <span class="token string">&#39;Hello ES6!&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u952E\u662F\u51FD\u6570</span>

m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span>  <span class="token comment">// Hello ES6!</span>
</code></pre></div><p>\uFF084\uFF09Map.prototype.has(key)</p><p><code>has</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u67D0\u4E2A\u952E\u662F\u5426\u5728\u5F53\u524D Map \u5BF9\u8C61\u4E4B\u4E2D\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token string">&#39;standard&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;years&#39;</span><span class="token punctuation">)</span>       <span class="token comment">// false</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">)</span>           <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
</code></pre></div><p>\uFF085\uFF09Map.prototype.delete(key)</p><p><code>delete</code> \u65B9\u6CD5\u5220\u9664\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DE <code>true</code>\u3002\u5982\u679C\u5220\u9664\u5931\u8D25\uFF0C\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>

m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>       <span class="token comment">// false</span>
</code></pre></div><p>\uFF086\uFF09Map.prototype.clear()</p><p><code>clear</code> \u65B9\u6CD5\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

map<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
map<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span>size <span class="token comment">// 0</span>
</code></pre></div><h3 id="\u904D\u5386\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u65B9\u6CD5" aria-hidden="true">#</a> \u904D\u5386\u65B9\u6CD5</h3><p>Map \u7ED3\u6784\u539F\u751F\u63D0\u4F9B\u4E09\u4E2A\u904D\u5386\u5668\u751F\u6210\u51FD\u6570\u548C\u4E00\u4E2A\u904D\u5386\u65B9\u6CD5\u3002</p><ul><li><code>Map.prototype.keys()</code> \uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668\u3002</li><li><code>Map.prototype.values()</code> \uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668\u3002</li><li><code>Map.prototype.entries()</code> \uFF1A\u8FD4\u56DE\u6240\u6709\u6210\u5458\u7684\u904D\u5386\u5668\u3002</li><li><code>Map.prototype.forEach()</code>\uFF1A\u904D\u5386 Map \u7684\u6240\u6709\u6210\u5458\u3002</li></ul><p>\u9700\u8981\u7279\u522B\u6CE8\u610F\u7684\u662F\uFF0CMap \u7684\u904D\u5386\u987A\u5E8F\u5C31\u662F\u63D2\u5165\u987A\u5E8F\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">,</span>  <span class="token string">&#39;yes&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot;</span>
<span class="token comment">// &quot;T&quot;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;no&quot;</span>
<span class="token comment">// &quot;yes&quot;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>

<span class="token comment">// \u7B49\u540C\u4E8E\u4F7F\u7528map.entries()</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>
</code></pre></div><p>Map \u7ED3\u6784\u8F6C\u4E3A\u6570\u7EC4\u7ED3\u6784\uFF0C\u6BD4\u8F83\u5FEB\u901F\u7684\u65B9\u6CD5\u662F\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26 <code>\uFF08...\uFF09</code>\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">// [1, 2, 3]</span>

<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">// [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]</span>

<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">// [[1,&#39;one&#39;], [2, &#39;two&#39;], [3, &#39;three&#39;]]</span>

<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">]</span>
<span class="token comment">// [[1,&#39;one&#39;], [2, &#39;two&#39;], [3, &#39;three&#39;]]</span>
</code></pre></div><p>\u7ED3\u5408\u6570\u7EC4\u7684 <code>map</code> \u65B9\u6CD5\u3001<code>filter</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5B9E\u73B0 Map \u7684\u904D\u5386\u548C\u8FC7\u6EE4\uFF08Map \u672C\u8EAB\u6CA1\u6709 <code>map</code> \u548C <code>filter</code> \u65B9\u6CD5\uFF09\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span><span class="token operator">...</span>map0<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> k <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4EA7\u751F Map \u7ED3\u6784 {1 =&gt; &#39;a&#39;, 2 =&gt; &#39;b&#39;}</span>

<span class="token keyword">const</span> map2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span><span class="token operator">...</span>map0<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>k <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span> <span class="token operator">+</span> v<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4EA7\u751F Map \u7ED3\u6784 {2 =&gt; &#39;_a&#39;, 4 =&gt; &#39;_b&#39;, 6 =&gt; &#39;_c&#39;}</span>
</code></pre></div><p>\u6B64\u5916\uFF0CMap \u8FD8\u6709\u4E00\u4E2A <code>forEach</code> \u65B9\u6CD5\uFF0C\u4E0E\u6570\u7EC4\u7684 <code>forEach</code> \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u904D\u5386\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Key: %s, Value: %s&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u4E0E\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u7684\u4E92\u76F8\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u4E0E\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u7684\u4E92\u76F8\u8F6C\u6362" aria-hidden="true">#</a> \u4E0E\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u7684\u4E92\u76F8\u8F6C\u6362</h3><ol><li>Map \u8F6C\u4E3A\u6570\u7EC4 \u524D\u9762\u5DF2\u7ECF\u63D0\u8FC7\uFF0CMap \u8F6C\u4E3A\u6570\u7EC4\u6700\u65B9\u4FBF\u7684\u65B9\u6CD5\uFF0C\u5C31\u662F\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08<code>...</code>\uFF09\u3002</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> myMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>foo<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token operator">...</span>myMap<span class="token punctuation">]</span>
<span class="token comment">// [ [ true, 7 ], [ { foo: 3 }, [ &#39;abc&#39; ] ] ]</span>
</code></pre></div><ol start="2"><li>\u6570\u7EC4 \u8F6C\u4E3A Map \u5C06\u6570\u7EC4\u4F20\u5165 Map \u6784\u9020\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u8F6C\u4E3A Map\u3002</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token punctuation">{</span>foo<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Map {</span>
<span class="token comment">//   true =&gt; 7,</span>
<span class="token comment">//   Object {foo: 3} =&gt; [&#39;abc&#39;]</span>
<span class="token comment">// }</span>
</code></pre></div><ol start="3"><li>Map \u8F6C\u4E3A\u5BF9\u8C61</li></ol><p>\u5982\u679C\u6240\u6709 Map \u7684\u952E\u90FD\u662F\u5B57\u7B26\u4E32\uFF0C\u5B83\u53EF\u4EE5\u65E0\u635F\u5730\u8F6C\u4E3A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">strMapToObj</span><span class="token punctuation">(</span><span class="token parameter">strMap</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span>v<span class="token punctuation">]</span> <span class="token keyword">of</span> strMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;yes&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;no&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strMapToObj</span><span class="token punctuation">(</span>myMap<span class="token punctuation">)</span>
<span class="token comment">// { yes: true, no: false }</span>
</code></pre></div><ol start="4"><li>\u5BF9\u8C61\u8F6C\u4E3A Map \u5BF9\u8C61\u8F6C\u4E3A Map \u53EF\u4EE5\u901A\u8FC7 <code>Object.entries()</code>\u3002</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="5"><li>Map \u8F6C\u4E3A JSON Map \u8F6C\u4E3A JSON \u8981\u533A\u5206\u4E24\u79CD\u60C5\u51B5\u3002\u4E00\u79CD\u60C5\u51B5\u662F\uFF0CMap \u7684\u952E\u540D\u90FD\u662F\u5B57\u7B26\u4E32\uFF0C\u8FD9\u65F6\u53EF\u4EE5\u9009\u62E9\u8F6C\u4E3A\u5BF9\u8C61 JSON\u3002</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">strMapToJson</span><span class="token punctuation">(</span><span class="token parameter">strMap</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">strMapToObj</span><span class="token punctuation">(</span>strMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;yes&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;no&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strMapToJson</span><span class="token punctuation">(</span>myMap<span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;yes&quot;:true,&quot;no&quot;:false}&#39;</span>
</code></pre></div><p>\u53E6\u4E00\u79CD\u60C5\u51B5\u662F\uFF0CMap \u7684\u952E\u540D\u6709\u975E\u5B57\u7B26\u4E32\uFF0C\u8FD9\u65F6\u53EF\u4EE5\u9009\u62E9\u8F6C\u4E3A\u6570\u7EC4 JSON\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mapToArrayJson</span><span class="token punctuation">(</span><span class="token parameter">map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>foo<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">mapToArrayJson</span><span class="token punctuation">(</span>myMap<span class="token punctuation">)</span>
<span class="token comment">// &#39;[[true,7],[{&quot;foo&quot;:3},[&quot;abc&quot;]]]&#39;</span>
</code></pre></div><ol start="6"><li>JSON \u8F6C\u4E3A Map</li></ol><p>JSON \u8F6C\u4E3A Map\uFF0C\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6240\u6709\u952E\u540D\u90FD\u662F\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">jsonToStrMap</span><span class="token punctuation">(</span><span class="token parameter">jsonStr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">objToStrMap</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">jsonToStrMap</span><span class="token punctuation">(</span><span class="token string">&#39;{&quot;yes&quot;: true, &quot;no&quot;: false}&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// Map {&#39;yes&#39; =&gt; true, &#39;no&#39; =&gt; false}</span>
</code></pre></div><p>\u4F46\u662F\uFF0C\u6709\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\uFF0C\u6574\u4E2A JSON \u5C31\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4E14\u6BCF\u4E2A\u6570\u7EC4\u6210\u5458\u672C\u8EAB\uFF0C\u53C8\u662F\u4E00\u4E2A\u6709\u4E24\u4E2A\u6210\u5458\u7684\u6570\u7EC4\u3002\u8FD9\u65F6\uFF0C\u5B83\u53EF\u4EE5\u4E00\u4E00\u5BF9\u5E94\u5730\u8F6C\u4E3A Map\u3002\u8FD9\u5F80\u5F80\u662F Map \u8F6C\u4E3A\u6570\u7EC4 JSON \u7684\u9006\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">jsonToMap</span><span class="token punctuation">(</span><span class="token parameter">jsonStr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">jsonToMap</span><span class="token punctuation">(</span><span class="token string">&#39;[[true,7],[{&quot;foo&quot;:3},[&quot;abc&quot;]]]&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// Map {true =&gt; 7, Object {foo: 3} =&gt; [&#39;abc&#39;]}</span>
</code></pre></div>`,106);function t(o,c){return p}var l=s(a,[["render",t]]);export{l as default};
