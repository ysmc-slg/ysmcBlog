import{r as e,c,a as s,d as p,w as o,F as u,e as a,b as n,o as l}from"./app.4988267b.js";import{_ as i}from"./plugin-vue_export-helper.5a098b48.js";const k={},r=a(`<h1 id="\u8BA4\u8BC1\u6D41\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u8BA4\u8BC1\u6D41\u7A0B\u5206\u6790" aria-hidden="true">#</a> \u8BA4\u8BC1\u6D41\u7A0B\u5206\u6790</h1><p>Spring Security \u4E2D\u9ED8\u8BA4\u7684\u4E00\u5957\u767B\u5F55\u6D41\u7A0B\u662F\u975E\u5E38\u5B8C\u5584\u5E76\u4E14\u4E25\u8C28\u7684\u3002\u4F46\u662F\u9879\u76EE\u9700\u6C42\u975E\u5E38\u591A\u6837\u5316\uFF0C\u5F88\u591A\u65F6\u5019\uFF0C\u6211\u4EEC\u53EF\u80FD\u8FD8\u9700\u8981\u5BF9 Spring Security \u767B\u5F55\u6D41\u7A0B\u8FDB\u884C\u5B9A\u5236\uFF0C\u5B9A\u5236\u7684\u524D\u63D0\u662F\u5F00\u53D1\u8005\u5148\u6DF1\u523B\u7406\u89E3 Spring Security \u767B\u5F55\u6D41\u7A0B\uFF0C\u7136\u540E\u5728\u6B64\u57FA\u7840\u4E4B\u4E0A\uFF0C\u5B8C\u6210\u5BF9\u767B\u5F55\u6D41\u7A0B\u7684\u5B9A\u5236\u3002\u672C\u7AE0\u5C06\u4ECE\u5934\u68B3\u7406 Spring Security \u767B\u5F55\u6D41\u7A0B\uFF0C\u5E76\u901A\u8FC7\u51E0\u4E2A\u5E38\u89C1\u7684\u767B\u5F55\u5B9A\u5236\u6848\u4F8B\uFF0C\u8BA9\u8BFB\u8005\u66F4\u52A0\u6DF1\u523B\u5730\u7406\u89E3 SpringSecurity \u767B\u5F55\u6D41\u7A0B\u3002</p><p>\u672C\u6587\u6D89\u53CA\u7684\u53EA\u8981\u77E5\u8BC6\u70B9\u6709\uFF1A</p><ol><li>\u767B\u5F55\u6D41\u7A0B\u5206\u6790</li><li>\u914D\u7F6E\u591A\u4E2A\u6570\u636E\u6E90</li><li>\u6DFB\u52A0\u767B\u5F55\u9A8C\u8BC1\u7801</li></ol><h2 id="\u767B\u5F55\u6D41\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u767B\u5F55\u6D41\u7A0B\u5206\u6790" aria-hidden="true">#</a> \u767B\u5F55\u6D41\u7A0B\u5206\u6790</h2><p>\u8981\u641E\u6E05\u695A Spring Security \u8BA4\u8BC1\u6D41\u7A0B\uFF0C\u6211\u4EEC\u5F97\u5148\u8BA4\u8BC6\u4E0E\u4E4B\u76F8\u5173\u7684\u4E09\u4E2A\u57FA\u672C\u7EC4\u4EF6 Authentication\uFF08\u8FD9\u4E2A\u524D\u9762\u5DF2\u7ECF\u4ECB\u7ECD\u8FC7\uFF09\u3001AuthenticationManaget\u3001ProviderManager \u4EE5\u53CA AuthenticationProvider\uFF0C\u540C\u65F6\u8FD8\u8981\u53BB\u4E86\u89E3\u63A5\u5165\u8BA4\u8BC1\u529F\u80FD\u7684\u8FC7\u6EE4\u5668 AbstractAuthenticationProcessingFilter\uFF0C\u8FD9\u56DB\u4E2A\u7C7B\u641E\u660E\u767D\u4E86\uFF0C\u57FA\u672C\u4E0A\u8BA4\u8BC1\u6D41\u7A0B\u4E5F\u5C31\u6E05\u695A\u4E86\uFF0C\u4E0B\u9762\u6211\u4EEC\u9010\u4E2A\u5206\u6790\u4E00\u4E0B\u3002</p><h3 id="authenticationmanager" tabindex="-1"><a class="header-anchor" href="#authenticationmanager" aria-hidden="true">#</a> AuthenticationManager</h3><p>AuthenticationManager \u662F\u4E00\u4E2A\u8BA4\u8BC1\u7BA1\u7406\u5668\uFF0C\u5B83\u5B9A\u4E49\u4E86 Spring Security \u8FC7\u6EE4\u5668\u8981\u5982\u4F55\u6267\u884C\u8BA4\u8BC1\u64CD\u4F5C\u3002AuthenticationManager \u5728\u8BA4\u8BC1\u6210\u529F\u540E\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A Authentication \u5BF9\u8C61\uFF0C\u8FD9\u4E2A Authentication \u5BF9\u8C61\u4F1A\u88AB\u8BBE\u7F6E\u5230 SecurityContextHolder \u4E2D\u3002\u5982\u679C\u5F00\u53D1\u8005\u4E0D\u60F3\u4F7F\u7528Spring Security \u63D0\u4F9B\u7684\u4E00\u5957\u8BA4\u8BC1\u673A\u5236\uFF0C\u90A3\u4E48\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u8BA4\u8BC1\u6D41\u7A0B\uFF0C\u8BA4\u8BC1\u6210\u529F\u540E\uFF0C\u624B\u52A8\u5C06 Authentication \u5B58\u5165 SecurityContextHolder \u4E2D\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthenticationManager</span> <span class="token punctuation">{</span>
 <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4ECE AuthenticationManager \u6E90\u7801\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0CAuthenticationManager \u5BF9\u4F20\u5165\u7684 Authentication \u5BF9\u8C61\u8FDB\u884C\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u6B64\u65F6\u4F20\u5165\u7684 Authentication \u53C2\u6570\u53EA\u6709 \u7528\u6237\u540D/\u5BC6\u7801 \u7B49\u7B80\u5355\u7684\u5C5E\u6027\uFF0C\u5982\u679C\u8BA4\u8BC1\u6210\u529F\uFF0C\u8FD4\u56DE\u7684 Authentication \u7684\u5C5E\u6027\u4F1A\u5F97\u5230\u5B8C\u5168\u586B\u5145\uFF0C\u5305\u62EC\u7528\u6237\u6240\u5177\u5907\u7684\u89D2\u8272\u4FE1\u606F\u3002</p><p>AuthenticationManager \u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5B83\u6709\u7740\u8BF8\u591A\u7684\u5B9E\u73B0\u7C7B\uFF0C\u5F00\u53D1\u8005\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49 AuthenticationManager \u7684\u5B9E\u73B0\u7C7B\uFF0C\u4E0D\u8FC7\u5728\u5B9E\u9645\u5E94\u7528\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u6700\u591A\u7684\u662F ProviderManager\u3002\u5728 Spring Security \u6846\u67B6\u4E2D\uFF0C\u9ED8\u8BA4\u4E5F\u662F\u4F7F\u7528 ProviderManager\u3002</p><h3 id="authenticationprovider" tabindex="-1"><a class="header-anchor" href="#authenticationprovider" aria-hidden="true">#</a> AuthenticationProvider</h3>`,12),d=n("\u5728\u524D\u9762\u7684 "),h=n("\u767B\u5F55\u7528\u6237\u6570\u636E\u83B7\u53D6"),g=n(" \u6211\u4EEC\u5DF2\u7ECF\u4ECB\u7ECD\u4E86\uFF0CSpring Security \u652F\u6301\u4E0D\u540C\u7684\u8BA4\u8BC1\u65B9\u5F0F\uFF0C\u4E0D\u540C\u7684\u8BA4\u8BC1\u65B9\u5F0F\u5BF9\u5E94\u4E0D\u540C\u7684\u8EAB\u4EFD\u7C7B\u578B\uFF0C"),w=s("code",null,"AuthenticationProvider",-1),m=n(" \u5C31\u662F\u9488\u5BF9\u4E0D\u540C\u7684\u8EAB\u4EFD\u7C7B\u578B\u6267\u884C\u5177\u4F53\u7684\u8EAB\u4EFD\u8BA4\u8BC1\u3002\u4F8B\u5982\uFF0C\u5E38\u89C1\u7684 "),y=s("code",null,"DaoAuthenticationProvider",-1),f=n(" \u7528\u6765\u652F\u6301 \u7528\u6237\u540D/\u5BC6\u7801\u767B\u5F55\u8BA4\u8BC1\uFF0C"),A=s("code",null,"RememberMeAuthenticationProvider",-1),v=n(' \u7528\u6765\u652F\u6301 "\u8BB0\u4F4F\u6211" \u7684\u8BA4\u8BC1\u3002'),q=a(`<p>AuthenticationProvider \u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthenticationProvider</span> <span class="token punctuation">{</span>
 <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>
 <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol><li>authenticate\uFF1A\u7528\u6765\u6267\u884C\u5177\u4F53\u7684\u8EAB\u4EFD\u8BA4\u8BC1</li><li>supports\uFF1A\u7528\u6765\u5224\u65AD\u5F53\u524D AuthenticationProvider \u662F\u5426\u652F\u6301\u5BF9\u5E94\u7684\u8EAB\u4EFD\u7C7B\u578B\u3002</li></ol><p>\u5F53\u4F7F\u7528 \u7528\u6237\u540D/\u5BC6\u7801 \u7684\u65B9\u5F0F\u767B\u5F55\u662F\uFF0C\u5BF9\u5E94\u7684 AuthenticationProvider \u5B9E\u73B0\u7C7B\u662F <code>DaoAuthenticationProvider</code>\uFF0C\u800C DaoAutehnticationProvider \u7EE7\u627F\u81EA <code>AbstractUserDetailsAuthenticationProvider</code> \u5E76\u4E14\u6CA1\u6709\u91CD\u5199 <code>authenticate</code>\u65B9\u6CD5\uFF0C\u6240\u4EE5\u5177\u4F53\u7684\u8BA4\u8BC1\u903B\u8F91\u5728 <code>AbstractUserDetailsAuthenticationProvider</code> \u7684 <code>authenticate</code> \u65B9\u6CD5\u4E2D\u3002\u6211\u4EEC\u5C31\u4ECE <code>AbstractUserDetailsAuthenticationProvider</code> \u5F00\u59CB\u770B\u8D77\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractUserDetailsAuthenticationProvider</span> <span class="token keyword">implements</span>
		<span class="token class-name">AuthenticationProvider</span><span class="token punctuation">,</span> <span class="token class-name">InitializingBean</span><span class="token punctuation">,</span> <span class="token class-name">MessageSourceAware</span> <span class="token punctuation">{</span>

	<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


	<span class="token keyword">protected</span> <span class="token class-name">MessageSourceAccessor</span> messages <span class="token operator">=</span> <span class="token class-name">SpringSecurityMessageSource</span><span class="token punctuation">.</span><span class="token function">getAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">UserCache</span> userCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NullUserCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">boolean</span> forcePrincipalAsString <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">protected</span> <span class="token keyword">boolean</span> hideUserNotFoundExceptions <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">UserDetailsChecker</span> preAuthenticationChecks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultPreAuthenticationChecks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">UserDetailsChecker</span> postAuthenticationChecks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultPostAuthenticationChecks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">GrantedAuthoritiesMapper</span> authoritiesMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NullAuthoritiesMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	
	<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">additionalAuthenticationChecks</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">,</span>
			<span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>userCache<span class="token punctuation">,</span> <span class="token string">&quot;A user cache must be set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messages<span class="token punctuation">,</span> <span class="token string">&quot;A message source must be set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">doAfterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isInstanceOf</span><span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> authentication<span class="token punctuation">,</span>
				<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
						<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.onlySupports&quot;</span><span class="token punctuation">,</span>
						<span class="token string">&quot;Only UsernamePasswordAuthenticationToken is supported&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;NONE_PROVIDED&quot;</span>
				<span class="token operator">:</span> authentication<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">boolean</span> cacheWasUsed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token class-name">UserDetails</span> user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userCache<span class="token punctuation">.</span><span class="token function">getUserFromCache</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cacheWasUsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				user <span class="token operator">=</span> <span class="token function">retrieveUser</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>
						<span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UsernameNotFoundException</span> notFound<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;User &#39;&quot;</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">&quot;&#39; not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">if</span> <span class="token punctuation">(</span>hideUserNotFoundExceptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadCredentialsException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
							<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.badCredentials&quot;</span><span class="token punctuation">,</span>
							<span class="token string">&quot;Bad credentials&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">else</span> <span class="token punctuation">{</span>
					<span class="token keyword">throw</span> notFound<span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>
					<span class="token string">&quot;retrieveUser returned null - a violation of the interface contract&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			preAuthenticationChecks<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">additionalAuthenticationChecks</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>
					<span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>cacheWasUsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				cacheWasUsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
				user <span class="token operator">=</span> <span class="token function">retrieveUser</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>
						<span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
				preAuthenticationChecks<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">additionalAuthenticationChecks</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>
						<span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> exception<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		postAuthenticationChecks<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cacheWasUsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>userCache<span class="token punctuation">.</span><span class="token function">putUserInCache</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">Object</span> principalToReturn <span class="token operator">=</span> user<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>forcePrincipalAsString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			principalToReturn <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> <span class="token function">createSuccessAuthentication</span><span class="token punctuation">(</span>principalToReturn<span class="token punctuation">,</span> authentication<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	
	<span class="token keyword">protected</span> <span class="token class-name">Authentication</span> <span class="token function">createSuccessAuthentication</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">,</span> <span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">UsernamePasswordAuthenticationToken</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>
				principal<span class="token punctuation">,</span> authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				authoritiesMapper<span class="token punctuation">.</span><span class="token function">mapAuthorities</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doAfterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">UserCache</span> <span class="token function">getUserCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> userCache<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isForcePrincipalAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> forcePrincipalAsString<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHideUserNotFoundExceptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> hideUserNotFoundExceptions<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	
	<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">UserDetails</span> <span class="token function">retrieveUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span>
			<span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setForcePrincipalAsString</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> forcePrincipalAsString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>forcePrincipalAsString <span class="token operator">=</span> forcePrincipalAsString<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHideUserNotFoundExceptions</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hideUserNotFoundExceptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>hideUserNotFoundExceptions <span class="token operator">=</span> hideUserNotFoundExceptions<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMessageSource</span><span class="token punctuation">(</span><span class="token class-name">MessageSource</span> messageSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>messages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageSourceAccessor</span><span class="token punctuation">(</span>messageSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserCache</span><span class="token punctuation">(</span><span class="token class-name">UserCache</span> userCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>userCache <span class="token operator">=</span> userCache<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">.</span><span class="token keyword">class</span>
				<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token class-name">UserDetailsChecker</span> <span class="token function">getPreAuthenticationChecks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> preAuthenticationChecks<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPreAuthenticationChecks</span><span class="token punctuation">(</span><span class="token class-name">UserDetailsChecker</span> preAuthenticationChecks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>preAuthenticationChecks <span class="token operator">=</span> preAuthenticationChecks<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token class-name">UserDetailsChecker</span> <span class="token function">getPostAuthenticationChecks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> postAuthenticationChecks<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPostAuthenticationChecks</span><span class="token punctuation">(</span><span class="token class-name">UserDetailsChecker</span> postAuthenticationChecks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>postAuthenticationChecks <span class="token operator">=</span> postAuthenticationChecks<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAuthoritiesMapper</span><span class="token punctuation">(</span><span class="token class-name">GrantedAuthoritiesMapper</span> authoritiesMapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>authoritiesMapper <span class="token operator">=</span> authoritiesMapper<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">DefaultPreAuthenticationChecks</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsChecker</span> <span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">isAccountNonLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;User account is locked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">LockedException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
						<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.locked&quot;</span><span class="token punctuation">,</span>
						<span class="token string">&quot;User account is locked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;User account is disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DisabledException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
						<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.disabled&quot;</span><span class="token punctuation">,</span>
						<span class="token string">&quot;User is disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">isAccountNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;User account is expired&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AccountExpiredException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
						<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.expired&quot;</span><span class="token punctuation">,</span>
						<span class="token string">&quot;User account has expired&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">DefaultPostAuthenticationChecks</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsChecker</span> <span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">isCredentialsNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;User account credentials have expired&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CredentialsExpiredException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
						<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.credentialsExpired&quot;</span><span class="token punctuation">,</span>
						<span class="token string">&quot;User credentials have expired&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>AbstractUserDetailsAuthenticationProvider</code> \u662F\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u62BD\u8C61\u65B9\u6CD5\u5728\u5B83\u7684\u5B9E\u73B0\u7C7B <code>DaoAuthenticationProvider</code> \u4E2D\u5B8C\u6210\u3002AbstractUserDetailsAuthenticationProvider \u672C\u8EAB\u903B\u8F91\u5F88\u7B80\u5355\uFF1A</p><ol><li>\u4E00\u5F00\u59CB\u5148\u58F0\u660E\u4E00\u4E2A\u7528\u6237\u7F13\u5B58\u5BF9\u8C61 userCache\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u6CA1\u6709\u542F\u52A8\u7F13\u5B58\u5BF9\u8C61\u3002</li><li><code>hideUserNotFoundExceptions</code> \u8868\u793A\u662F\u5426\u9690\u85CF\u7528\u6237\u540D\u67E5\u8BE2\u5931\u8D25\u7684\u5F02\u5E38\uFF0C\u9ED8\u8BA4\u4E3A true\u3002\u4E3A\u4E86\u786E\u4FDD\u7CFB\u7EDF\u5B89\u5168\uFF0C\u7528\u6237\u5728\u767B\u5F55\u5931\u8D25\u65F6\u4F1A\u7ED9\u51FA\u4E00\u4E2A\u6A21\u7CCA\u63D0\u793A\uFF0C\u4F8B\u5982 \u201C\u7528\u6237\u540D\u6216\u5BC6\u7801\u8F93\u5165\u9519\u8BEF\u201D\u3002\u5728 Spring Secvurity \u5185\u90E8\uFF0C\u5982\u679C\u7528\u6237\u540D\u67E5\u627E\u5931\u8D25\uFF0C\u5219\u4F1A\u629B\u51FA <code>UsernameNotFoundException</code> \u5F02\u5E38\uFF0C\u4F46\u662F\u8BE5\u5F02\u5E38\u4F1A\u88AB\u81EA\u52A8\u9690\u85CF\uFF0C\u8F6C\u800C\u901A\u8FC7\u4E00\u4E2A <code>BadCredentialsException</code> \u5F02\u5E38\u6765\u4EE3\u66FF\u5B83\uFF0C\u8FD9\u6837\uFF0C\u5F00\u53D1\u8005\u5728\u5904\u7406\u767B\u5F55\u5931\u8D25\u5F02\u5E38\u65F6\uFF0C\u65E0\u8BBA\u662F\u7528\u6237\u540D\u8F93\u5165\u9519\u8BEF\u8FD8\u662F\u5BC6\u7801\u8F93\u5165\u9519\u8BEF\uFF0C\u6536\u5230\u7684\u603B\u662F <code>BadCredentialsException</code>\uFF0C\u8FD9\u6837\u505A\u7684\u4E00\u4E2A\u597D\u5904\u662F\u53EF\u4EE5\u907F\u514D\u65B0\u624B\u7A0B\u5E8F\u5458\u5C06\u7528\u6237\u540D\u8F93\u5165\u9519\u8BEF\u548C\u5BC6\u7801\u8F93\u5165\u9519\u8BEF\u4E24\u4E2A\u5F02\u5E38\u5206\u5F00\u63D0\u793A\u3002</li><li><code>forcePrincipalAsString</code> \u8868\u793A\u662F\u5426\u5C06 <code>Principal</code> \u5BF9\u8C61\u5F53\u6210\u5B57\u7B26\u4E32\u6765\u5904\u7406\uFF0C\u9ED8\u8BA4\u662F false\u3002<code>Authentication</code> \u4E2D\u7684 <code>principal</code> \u5C5E\u6027\u7C7B\u578B\u662F\u4E00\u4E2A Object\uFF0C\u6B63\u5E38\u6765\u8BF4\uFF0C\u901A\u8FC7 principal \u5C5E\u6027\u53EF\u4EE5\u83B7\u53D6\u5230\u5F53\u524D\u767B\u5F55\u7528\u6237\u5BF9\u8C61\uFF08\u5373 UserDetails\uFF09\uFF0C\u4F46\u662F\u5982\u679C <code>forcePrincipalAsString</code> \u8BBE\u7F6E\u4E3A true\uFF0C\u5219 <code>Authentication</code> \u4E2D\u7684 <code>principal</code> \u5C5E\u6027\u8FD4\u56DE\u5C31\u662F\u5F53\u524D\u767B\u5F55\u7528\u6237\u540D\uFF0C\u800C\u4E0D\u662F\u7528\u6237\u5BF9\u8C61\u3002</li><li><code>preAuthenticationChecks</code> \u5BF9\u8C61\u5219\u662F\u7528\u4E8E\u505A\u7528\u6237\u72B6\u6001\u68C0\u67E5\uFF0C\u5728\u7528\u6237\u8BA4\u8BC1\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u68C0\u9A8C\u7528\u6237\u72B6\u6001\u662F\u5426\u6B63\u5E38\uFF0C\u4F8B\u5982\u8D26\u6237\u662F\u5426\u88AB\u9501\u5B9A\u3001\u8D26\u6237\u662F\u5426\u53EF\u7528\u3001\u8D26\u6237\u662F\u5426\u8FC7\u671F\u7B49\u3002</li><li><code>postAuthenticationChecks</code> \u5BF9\u8C61\u4E3B\u8981\u8D1F\u8D23\u5728\u5BC6\u7801\u6821\u9A8C\u6210\u529F\u540E\uFF0C\u68C0\u67E5\u5BC6\u7801\u662F\u5426\u8FC7\u671F\u3002</li><li><code>additionalAuthenticationChecks</code> \u662F\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u4E3B\u8981\u5C31\u662F\u6821\u9A8C\u5BC6\u7801\uFF0C\u5177\u4F53\u7684\u5B9E\u73B0\u5728 <code>DaoAuthenticationProvider</code> \u4E2D\u3002</li><li><code>authenticate</code> \u65B9\u6CD5\u5C31\u662F\u6838\u5FC3\u7684\u6821\u9A8C\u65B9\u6CD5\u4E86\u3002\u5728\u65B9\u6CD5\u4E2D\uFF0C\u9996\u5148\u4ECE\u767B\u5F55\u6570\u636E\u4E2D\u83B7\u53D6\u7528\u6237\u540D\uFF0C\u7136\u540E\u6839\u636E\u7528\u6237\u540D\u53BB\u7F13\u5B58\u4E2D\u67E5\u8BE2\u7528\u6237\u5BF9\u8C61\uFF0C\u5982\u679C\u67E5\u8BE2\u4E0D\u5230\uFF0C\u5219\u6839\u636E\u7528\u6237\u540D\u8C03\u7528 <code>retrieveUser</code> \u65B9\u6CD5\u4ECE\u6570\u636E\u5E93\u4E2D\u52A0\u8F7D\u7528\u6237\uFF1B\u5982\u679C\u6CA1\u6709\u52A0\u8F7D\u5230\u7528\u6237\uFF0C\u5219\u629B\u51FA\u5F02\u5E38\uFF08\u7528\u6237\u4E0D\u5B58\u5728\u5F02\u5E38\u4F1A\u88AB\u9690\u85CF\uFF09\u3002\u62FF\u5230\u7528\u6237\u5BF9\u8C61\u4E4B\u540E\uFF0C\u9996\u5148\u8C03\u7528 <code>preAuthenticationChecks.check</code> \u65B9\u6CD5\u8FDB\u884C\u7528\u6237\u72B6\u6001\u68C0\u67E5\uFF0C\u7136\u540E\u8C03\u7528 <code>additionalAuthenticationChecks</code> \u65B9\u6CD5\u8FDB\u884C\u5BC6\u7801\u7684\u6821\u9A8C\u64CD\u4F5C\uFF0C\u6700\u540E\u8C03\u7528 <code>postAuthenticationChecks.check</code> \u65B9\u6CD5\u68C0\u67E5\u5BC6\u7801\u662F\u5426\u8FC7\u671F\uFF0C\u5F53\u6240\u6709\u6B65\u9AA4\u90FD\u987A\u5229\u5B8C\u6210\u540E\uFF0C\u8C03\u7528 <code>createSuccessAuthentication</code> \u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u8BA4\u8BC1\u540E\u7684 <code>UsernamePasswordAuthenticationToken</code> \u5BF9\u8C61\u5E76\u8FD4\u56DE\uFF0C\u8BA4\u8BC1\u540E\u7684\u5BF9\u8C61\u4E2D\u5305\u542B\u4E86\u8BA4\u8BC1\u4E3B\u4F53\u3001\u51ED\u8BC1\u4EE5\u53CA\u89D2\u8272\u7B49\u4FE1\u606F\u3002</li></ol><p>\u8FD9\u5C31\u662F <code>AbstractUserDetailsAuthenticationProvider</code> \u7C7B\u7684\u5DE5\u4F5C\u6D41\u7A0B\uFF0C\u6709\u51E0\u4E2A\u62BD\u8C61\u65B9\u6CD5\u662F\u5728 <code>DaoAuthenticationProvider</code> \u4E2D\u5B9E\u73B0\u7684\uFF0C\u6211\u4EEC\u518D\u6765\u770B\u4E00\u4E0B <code>DaoAuthenticationProvider</code> \u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DaoAuthenticationProvider</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractUserDetailsAuthenticationProvider</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> USER_NOT_FOUND_PASSWORD <span class="token operator">=</span> <span class="token string">&quot;userNotFoundPassword&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">PasswordEncoder</span> passwordEncoder<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">String</span> userNotFoundEncodedPassword<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">UserDetailsService</span> userDetailsService<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">UserDetailsPasswordService</span> userDetailsPasswordService<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">DaoAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">PasswordEncoderFactories</span><span class="token punctuation">.</span><span class="token function">createDelegatingPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;deprecation&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">additionalAuthenticationChecks</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">,</span>
			<span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Authentication failed: no credentials provided&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadCredentialsException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
					<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.badCredentials&quot;</span><span class="token punctuation">,</span>
					<span class="token string">&quot;Bad credentials&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">String</span> presentedPassword <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>presentedPassword<span class="token punctuation">,</span> userDetails<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Authentication failed: password does not match stored value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadCredentialsException</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>
					<span class="token string">&quot;AbstractUserDetailsAuthenticationProvider.badCredentials&quot;</span><span class="token punctuation">,</span>
					<span class="token string">&quot;Bad credentials&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doAfterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>userDetailsService<span class="token punctuation">,</span> <span class="token string">&quot;A UserDetailsService must be set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">UserDetails</span> <span class="token function">retrieveUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span>
			<span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token function">prepareTimingAttackProtection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token class-name">UserDetails</span> loadedUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>loadedUser <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalAuthenticationServiceException</span><span class="token punctuation">(</span>
						<span class="token string">&quot;UserDetailsService returned null, which is an interface contract violation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> loadedUser<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UsernameNotFoundException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">mitigateAgainstTimingAttack</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InternalAuthenticationServiceException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalAuthenticationServiceException</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">Authentication</span> <span class="token function">createSuccessAuthentication</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span>
			<span class="token class-name">Authentication</span> authentication<span class="token punctuation">,</span> <span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> upgradeEncoding <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userDetailsPasswordService <span class="token operator">!=</span> <span class="token keyword">null</span>
				<span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">upgradeEncoding</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>upgradeEncoding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> presentedPassword <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> newPassword <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>presentedPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
			user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userDetailsPasswordService<span class="token punctuation">.</span><span class="token function">updatePassword</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> newPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">createSuccessAuthentication</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span> authentication<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">prepareTimingAttackProtection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>userNotFoundEncodedPassword <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>userNotFoundEncodedPassword <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>USER_NOT_FOUND_PASSWORD<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mitigateAgainstTimingAttack</span><span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> presentedPassword <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>presentedPassword<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userNotFoundEncodedPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPasswordEncoder</span><span class="token punctuation">(</span><span class="token class-name">PasswordEncoder</span> passwordEncoder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">,</span> <span class="token string">&quot;passwordEncoder cannot be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>passwordEncoder <span class="token operator">=</span> passwordEncoder<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>userNotFoundEncodedPassword <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token class-name">PasswordEncoder</span> <span class="token function">getPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> passwordEncoder<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserDetailsService</span><span class="token punctuation">(</span><span class="token class-name">UserDetailsService</span> userDetailsService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>userDetailsService <span class="token operator">=</span> userDetailsService<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token class-name">UserDetailsService</span> <span class="token function">getUserDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> userDetailsService<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserDetailsPasswordService</span><span class="token punctuation">(</span>
			<span class="token class-name">UserDetailsPasswordService</span> userDetailsPasswordService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>userDetailsPasswordService <span class="token operator">=</span> userDetailsPasswordService<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728 <code>DaoAuthenticationProvider</code> \u4E2D\uFF1A</p><ol><li>\u9996\u5148\u5B9A\u4E49\u4E86 <code>USER_NOT_FOUND_PASSWORD</code> \u5E38\u91CF\uFF0C\u8FD9\u4E2A\u662F\u5F53\u7528\u6237\u67E5\u627E\u5931\u8D25\u65F6\u7684\u9ED8\u8BA4\u5BC6\u7801\uFF1B<code>passwordEncoder</code> \u662F\u4E00\u4E2A\u5BC6\u7801\u52A0\u5BC6\u548C\u5BF9\u6BD4\u5DE5\u5177\uFF0C\u8FD9\u4E2A\u5728\u540E\u9762\u4F1A\u4ECB\u7ECD\uFF1B<code>userNotFoundEncodedPassword</code> \u53D8\u91CF\u5219\u7528\u6765\u4FDD\u5B58\u9ED8\u8BA4\u5BC6\u7801\u52A0\u5BC6\u540E\u7684\u503C\uFF1B<code>userDetailsService</code> \u662F\u4E00\u4E2A\u7528\u6237\u67E5\u627E\u5DE5\u5177\uFF0C<code>userDetailsPasswordService</code> \u5219\u7528\u6765\u63D0\u4F9B\u5BC6\u7801\u4FEE\u6539\u670D\u52A1\u3002</li><li>\u5728 <code>DaoAuthenticationProvider</code> \u7684\u6784\u9020\u65B9\u6CD5\u4E2D\uFF0C\u9ED8\u8BA4\u5C31\u4F1A\u6307\u5B9A <code>PasswordEncoder</code>\uFF0C\u5F53\u7136\u5F00\u53D1\u8005\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>set</code> \u65B9\u6CD5\u81EA\u5B9A\u4E49 PasswordEncoder\u3002</li><li><code>additionalAuthenticationChecks</code> \u65B9\u6CD5\u4E3B\u8981\u8FDB\u884C\u5BC6\u7801\u6821\u9A8C\uFF0C\u8BE5\u65B9\u6CD5\u7B2C\u4E00\u4E2A\u53C2\u6570 <code>userDetails</code> \u662F\u4ECE\u6570\u636E\u5E93\u4E2D\u67E5\u8BE2\u51FA\u6765\u7684\u7528\u6237\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570 <code>authentication</code> \u662F\u767B\u5F55\u7528\u6237\u8F93\u5165\u7684\u53C2\u6570\u3002\u4ECE\u8FD9\u4E24\u4E2A\u53C2\u6570\u4E2D\u5206\u522B\u63D0\u53D6\u51FA\u6765\u7528\u6237\u5BC6\u7801\uFF0C\u7136\u540E\u8C03\u7528 <code>passwordEncoder.matches</code> \u65B9\u6CD5\u8FDB\u884C\u5BC6\u7801\u6BD4\u5BF9\u3002</li><li><code>retrieveUser</code> \u65B9\u6CD5\u662F\u83B7\u53D6\u7528\u6237\u5BF9\u8C61\u7684\u65B9\u6CD5\uFF0C\u5177\u4F53\u505A\u6CD5\u5C31\u662F\u8C03\u7528 <code>UserDetailsService#loadUserByUsername</code> \u65B9\u6CD5\u53BB\u6570\u636E\u5E93\u4E2D\u67E5\u8BE2\u3002</li><li>\u5728 <code>retrieveUser</code> \u65B9\u6CD5\u4E2D\uFF0C\u6709\u4E00\u4E2A\u503C\u5F97\u5173\u6CE8\u7684\u5730\u65B9\u3002\u5728\u8BE5\u65B9\u6CD5\u4E00\u5F00\u59CB\uFF0C\u9996\u5148\u4F1A\u8C03\u7528 <code>prepareTimingAttackProtection</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u4F7F\u7528 PasswordEncoder \u5BF9\u5E38\u91CF <code>USER_NOT_FOUND_PASSWORD</code> \u8FDB\u884C\u52A0\u5BC6\uFF0C\u5C06\u52A0\u5BC6\u7ED3\u679C\u4FDD\u5B58\u5728 <code>userNotFoundEncodedPassword</code> \u53D8\u91CF\u4E2D\u3002\u5F53\u6839\u636E\u7528\u6237\u540D\u67E5\u627E\u7528\u6237\u65F6\uFF0C\u5982\u679C\u629B\u51FA\u4E86 <code>UsernameNotFoundException</code> \u5F02\u5E38\uFF0C\u5219\u8C03\u7528 <code>mitigateAgainstTimingAttack</code> \u65B9\u6CD5\u8FDB\u884C\u5BC6\u7801\u5BF9\u6BD4\u3002\u4F46\u8FD9\u65F6\u7528\u6237\u90FD\u6CA1\u67E5\u627E\u5230\uFF0C\u600E\u4E48\u5BF9\u6BD4\u5BC6\u7801\uFF1F\u9700\u8981\u6CE8\u610F\uFF0C\u5728\u8C03\u7528 <code>mitigateAgainstTimingAttack</code> \u65B9\u6CD5\u8FDB\u884C\u5BC6\u7801\u5BF9\u6BD4\u65F6\uFF0C\u4F7F\u7528\u4E86 <code>userNotFoundEncodedPassword</code> \u53D8\u91CF\u4F5C\u4E3A\u9ED8\u8BA4\u5BC6\u7801\u548C\u767B\u5F55\u8BF7\u6C42\u4F20\u6765\u7684\u7528\u6237\u5BC6\u7801\u6BD4\u5BF9\u3002\u8FD9\u662F\u4E00\u4E2A\u4E00\u5F00\u59CB\u5C31\u6CE8\u5B9A\u8981\u5931\u8D25\u7684\u5BC6\u7801\u5BF9\u6BD4\uFF0C\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8FD8\u8981\u8FDB\u884C\u6BD4\u5BF9\u5462\uFF1F\u8FD9\u4E3B\u8981\u662F\u4E3A\u4E86\u907F\u514D\u65C1\u9053\u653B\u51FB\uFF08Side-channel attack\uFF09\u3002\u5982\u679C\u6839\u636E\u7528\u6237\u540D\u67E5\u627E\u7528\u6237\u5931\u8D25\uFF0C\u5C31\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\u800C\u4E0D\u8FDB\u884C\u5BC6\u7801\u6BD4\u5BF9\uFF0C\u90A3\u4E48\u9ED1\u5BA2\u7ECF\u8FC7\u5927\u91CF\u7684\u6D4B\u8BD5\uFF0C\u5C31\u4F1A\u53D1\u73B0\u6709\u70B9\u8BF7\u6C42\u6D88\u8017\u65F6\u95F4\u660E\u663E\u5C0F\u4E8E\u5176\u4ED6\u8BF7\u6C42\uFF0C\u90A3\u4E48\u8FDB\u800C\u53EF\u4EE5\u5F97\u51FA\u8BE5\u8BF7\u6C42\u7684\u7528\u6237\u662F\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u7528\u6237\u540D\uFF08\uFF08\u56E0\u4E3A\u7528\u6237\u540D\u4E0D\u5B58\u5728\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u5BC6\u7801\u6BD4\u5BF9\uFF0C\u8FDB\u800C\u8282\u7701\u65F6\u95F4\uFF09\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u83B7\u53D6\u5230\u7CFB\u7EDF\u4FE1\u606F\u3002\u4E3A\u4E86\u907F\u514D\u8FD9\u4E00\u95EE\u9898\uFF0C\u6240\u4EE5\u5F53\u7528\u6237\u67E5\u627E\u5931\u8D25\u65F6\uFF0C\u4E5F\u4F1A\u8C03\u7528<code>mitigateAgainstTimingAttack</code> \u65B9\u6CD5\u8FDB\u884C\u5BC6\u7801\u6BD4\u5BF9\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u8FF7\u60D1\u9ED1\u5BA2\u3002</li><li><code>createSuccessAuthentication</code> \u65B9\u6CD5\u5219\u662F\u5728\u767B\u5F55\u6210\u529F\u540E\uFF0C\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684 <code>UsernamePasswordAuthenticationToken</code> \u5BF9\u8C61\uFF0C\u540C\u65F6\u4F1A\u5224\u65AD\u662F\u5426\u9700\u8981\u8FDB\u884C\u5BC6\u7801\u5347\u7EA7\uFF0C\u5982\u679C\u9700\u8981\u8FDB\u884C\u5BC6\u7801\u5347\u7EA7\uFF0C\u5C31\u4F1A\u5728\u8BE5\u65B9\u6CD5\u4E2D\u8FDB\u884C\u52A0\u5BC6\u65B9\u6848\u5347\u7EA7\u3002</li></ol><p>\u901A\u8FC7\u5BF9 <code>AbstractUserDetailsAuthenticationProvider</code> \u548C <code>DaoAuthenticationProvider</code> \u7684\u8BB2\u89E3\uFF0C\u76F8\u4FE1\u5927\u5BB6\u5DF2\u7ECF\u660E\u767D AuthenticationProvider \u4E2D\u7684\u8BA4\u8BC1\u903B\u8F91\u4E86\u3002</p><h3 id="providermanager" tabindex="-1"><a class="header-anchor" href="#providermanager" aria-hidden="true">#</a> ProviderManager</h3><p><code>ProviderManager</code> \u662F <code>AuthenticationManager</code> \u7684\u4E00\u4E2A\u91CD\u8981\u5B9E\u73B0\u7C7B\u3002\u5728\u5F00\u59CB\u5B66\u4E60\u4E4B\u524D\uFF0C\u6211\u4EEC\u5148\u901A\u8FC7\u4E00\u5E45\u56FE\u6765\u4E86\u89E3\u4E00\u4E0B <code>ProviderManager</code> \u548C <code>AuthenticationProvider</code> \u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u5982\u56FE 3-1 \u6240\u793A</p><p><img src="https://img.zxqs.top/20220902095013.png" alt="3-1"></p><p>\u5728 Spring Security \u4E2D\uFF0C\u7531\u4E8E\u7CFB\u7EDF\u53EF\u80FD\u540C\u65F6\u652F\u6301\u591A\u79CD\u4E0D\u540C\u7684\u8BA4\u8BC1\u65B9\u5F0F\uFF0C\u4F8B\u5982\u540C\u65F6\u652F\u6301 \u7528\u6237\u540D/\u5BC6\u7801 \u8BA4\u8BC1\u3001RemberMe \u8BA4\u8BC1\u3001\u624B\u673A\u53F7\u7801\u52A8\u6001\u8BA4\u8BC1\u7B49\uFF0C\u800C\u4E0D\u540C\u7684\u8BA4\u8BC1\u65B9\u5F0F\u5BF9\u5E94\u4E86\u4E0D\u540C\u7684 <code>AuthenticationProvider</code>\uFF0C\u6240\u4EE5\u4E00\u4E2A\u5B8C\u6574\u7684\u8BA4\u8BC1\u6D41\u7A0B\u53EF\u80FD\u6709\u591A\u4E2A <code>AuthenticationProvider</code> \u6765\u63D0\u4F9B\u3002</p><p>\u591A\u4E2A <code>AuthenticationProvider</code> \u5C06\u7EC4\u6210\u4E00\u4E2A\u5217\u8868\uFF0C\u8FD9\u4E2A\u5217\u8868\u5C06\u7531 <code>ProviderManager</code> \u4EE3\u7406\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5728 <code>ProviderManager</code> \u4E2D\u5B58\u5728\u4E00\u4E2A <code>AuthenticationProvider</code> \u5217\u8868\uFF0C\u5728 <code>ProviderManager</code> \u4E2D\u904D\u5386\u5217\u8868\u4E2D\u7684\u6BCF\u4E00\u4E2A <code>AuthenticationProvider</code> \u53BB\u6267\u884C\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u6700\u7EC8\u5F97\u5230\u8BA4\u8BC1\u7ED3\u679C\u3002</p><p><code>ProviderManager</code> \u672C\u8EAB\u4E5F\u53EF\u4EE5\u518D\u914D\u7F6E\u4E00\u4E2A <code>AuthenticationManager</code> \u4F5C\u4E3A <code>parent</code>\uFF0C\u8FD9\u6837\u5F53 <code>ProviderManager</code> \u8BA4\u8BC1\u5931\u8D25\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u8FDB\u5165\u5230 <code>parent</code> \u4E2D\u518D\u6B21\u8FDB\u884C\u8BA4\u8BC1\u3002\u7406\u8BBA\u4E0A\u6765\u8BF4\uFF0C<code>ProviderManager</code> \u7684 <code>parent</code> \u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B\u7684 <code>AuthenticationManager</code>\uFF0C\u4F46\u662F\u901A\u5E38\u90FD\u662F\u7531 <code>ProviderManager</code> \u6765\u626E\u6F14 <code>parent</code> \u7684\u89D2\u8272\uFF0C\u4E5F\u5C31\u662F <code>ProviderManager</code> \u662F <code>ProviderManager</code> \u7684 <code>parent</code>\u3002</p><p><code>ProviderManager</code> \u672C\u8EAB\u4E5F\u53EF\u4EE5\u6709\u591A\u4E2A\uFF0C\u591A\u4E2A <code>ProviderManager</code> \u5171\u7528\u540C\u4E00\u4E2A <code>parent</code>\uFF0C\u5F53\u5B58\u5728\u591A\u4E2A\u8FC7\u6EE4\u5668\u94FE\u7684\u65F6\u5019\u975E\u5E38\u6709\u7528\u3002\u5F53\u5B58\u5728\u591A\u4E2A\u8FC7\u6EE4\u5668\u94FE\u65F6\uFF0C\u4E0D\u540C\u7684\u8DEF\u5F84\u53EF\u80FD\u5BF9\u5E94\u4E0D\u540C\u7684\u8BA4\u8BC1\u65B9\u5F0F\uFF0C\u4F46\u662F\u4E0D\u540C\u8DEF\u5F84\u53EF\u80FD\u53C8\u4F1A\u540C\u65F6\u5B58\u5728\u4E00\u4E9B\u5171\u6709\u7684\u8BA4\u8BC1\u65B9\u5F0F\uFF0C\u8FD9\u4E9B\u5171\u6709\u7684\u8BA4\u8BC1\u65B9\u5F0F\u53EF\u4EE5\u5728 <code>parent</code> \u4E2D\u7EDF\u4E00\u5904\u7406\u3002</p><p>\u6839\u636E\u4E0A\u9762\u7684\u4ECB\u7ECD\uFF0C\u6211\u4EEC\u7ED8\u51FA\u65B0\u7684 <code>ProviderManager</code> \u548C <code>AuthenticationProvider</code> \u5173\u7CFB\u56FE\uFF0C\u5982\u56FE 3-2 \u6240\u793A\u3002</p><p><img src="https://img.zxqs.top/20220902133215.png" alt="3-2"></p><p>\u6211\u4EEC\u91CD\u70B9\u770B\u4E00\u4E0B <code>ProviderManager</code> \u4E2D\u7684 <code>authenticate</code> \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Authentication</span><span class="token punctuation">&gt;</span></span> toTest <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">AuthenticationException</span> lastException <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">AuthenticationException</span> parentException <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Authentication</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Authentication</span> parentResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> currentPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>providers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationProvider</span> provider <span class="token operator">:</span> <span class="token function">getProviders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>provider<span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span>toTest<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">continue</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token class-name">LogMessage</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Authenticating request with %s (%d/%d)&quot;</span><span class="token punctuation">,</span>
						provider<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">++</span>currentPosition<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				result <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">copyDetails</span><span class="token punctuation">(</span>authentication<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AccountStatusException</span> <span class="token operator">|</span> <span class="token class-name">InternalAuthenticationServiceException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">prepareException</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
				
				<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				lastException <span class="token operator">=</span> ex<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				parentResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
				result <span class="token operator">=</span> parentResult<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ProviderNotFoundException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				parentException <span class="token operator">=</span> ex<span class="token punctuation">;</span>
				lastException <span class="token operator">=</span> ex<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eraseCredentialsAfterAuthentication <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">CredentialsContainer</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				
				<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CredentialsContainer</span><span class="token punctuation">)</span> result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eraseCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>parentResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>eventPublisher<span class="token punctuation">.</span><span class="token function">publishAuthenticationSuccess</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">return</span> result<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>lastException <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			lastException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProviderNotFoundException</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token string">&quot;ProviderManager.providerNotFound&quot;</span><span class="token punctuation">,</span>
					<span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> toTest<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;No AuthenticationProvider found for {0}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>parentException <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">prepareException</span><span class="token punctuation">(</span>lastException<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">throw</span> lastException<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div><ol><li>\u9996\u5148\u83B7\u53D6 authentication \u5BF9\u8C61\u7684\u7C7B\u578B\u3002</li><li>\u5206\u522B\u5B9A\u4E49\u5F53\u524D\u8BA4\u8BC1\u8FC7\u7A0B\u629B\u51FA\u7684\u5F02\u5E38\u3001parent \u4E2D\u8BA4\u8BC1\u65F6\u629B\u51FA\u7684\u5F02\u5E38\u3001\u5F53\u524D\u8BA4\u8BC1\u7ED3\u679C\u4EE5\u53CA parent \u4E2D\u8BA4\u8BC1\u7ED3\u679C\u5BF9\u5E94\u7684\u53D8\u91CF</li><li>getProviders \u65B9\u6CD5\u7528\u6765\u83B7\u53D6\u5F53\u524D ProviderManager \u6240\u4EE3\u7406\u7684\u6240\u6709\u7684 AuthenticationProvider \u5BF9\u8C61\uFF0C\u904D\u5386\u8FD9\u4E9B AuthenticationProvider \u5BF9\u8C61\u8FDB\u884C\u8EAB\u4EFD\u8BA4\u8BC1\u3002</li><li>\u5224\u65AD\u5F53\u524D <code>AuthenticationProvider</code> \u662F\u5426\u652F\u6301\u5F53\u524D Authentication \u5BF9\u8C61\uFF0C\u8981\u662F\u4E0D\u652F\u6301\uFF0C\u5219\u7EE7\u7EED\u5904\u7406\u5217\u8868\u4E2D\u7684\u4E0B\u4E00\u4E2A AuthenticationProvider \u5BF9\u8C61\u3002</li><li>\u8C03\u7528 <code>provider.authenticate</code> \u65B9\u6CD5\u8FDB\u884C\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u5982\u679C\u8BA4\u8BC1\u6210\u529F\uFF0C\u8FD4\u56DE\u8BA4\u8BC1\u540E\u7684 Authentication \u5BF9\u8C61\uFF0C\u540C\u65F6\u8C03\u7528 <code>copyDetails</code> \u65B9\u6CD5\u7ED9 <code>Authentication</code> \u5BF9\u8C61\u7684 <code>details</code> \u5C5E\u6027\u8D4B\u503C\u3002\u7531\u4E8E\u8282\u80FD\u662F\u591A\u4E2AAuthenticationProvider \u6267\u884C\u8BA4\u8BC1\u64CD\u4F5C\uFF0C\u6240\u4EE5\u5982\u679C\u629B\u51FA\u5F02\u5E38\uFF0C\u5219\u901A\u8FC7 <code>lastException</code> \u53D8\u91CF\u6765\u8BB0\u5F55\u3002</li><li>\u5728 for \u5FAA\u73AF\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u5982\u679C <code>result</code> \u8FD8\u662F\u6CA1\u6709\u503C\uFF0C\u8BF4\u660E\u6240\u6709\u7684 AuthenticationProvider \u90FD\u8BA4\u8BC1\u5931\u8D25\uFF0C\u6B64\u65F6\u5982\u679C parent \u4E0D\u4E3A\u7A7A\uFF0C\u5219\u8C03\u7528 parent \u7684 authenticate \u65B9\u6CD5\u8FDB\u884C\u8BA4\u8BC1\u3002</li><li>\u63A5\u4E0B\u6765\uFF0C\u5982\u679C <code>result</code> \u4E0D\u4E3A\u7A7A\uFF0C\u5C31\u5C06 result \u4E2D\u7684\u51ED\u8BC1\u64E6\u9664\uFF0C\u9632\u6B62\u6CC4\u9732\u3002\u5982\u679C\u4F7F\u7528\u4E86 \u7528\u6237\u540D/\u5BC6\u7801\u7684\u65B9\u5F0F\u767B\u5F55\uFF0C\u90A3\u4E48\u6240\u8C13\u7684\u64E6\u9664\u5B9E\u9645\u4E0A\u5373\u4F7F\u5C06\u5BC6\u7801\u5B57\u6BB5\u8BBE\u7F6E\u4E3Anull\uFF0C\u540C\u65F6\u5C06\u767B\u5F55\u6210\u529F\u7684\u4E8B\u4EF6\u53D1\u5E03\u51FA\u53BB\uFF08\u53D1\u5E03\u767B\u5F55\u6210\u529F\u4E8B\u4EF6\u9700\u8981 parentResult \u4E3A null\u3002\u5982\u679C parentResult \u4E0D\u4E3A null\uFF0C\u8868\u793A\u5728 parent \u4E2D\u5DF2\u7ECF\u8BA4\u8BC1\u6210\u529F\u4E86\uFF0C\u8BA4\u8BC1\u6210\u529F\u7684\u4E8B\u4EF6\u4E5F\u5DF2\u7ECF\u5728 parent \u4E2D\u53D1\u5E03\u51FA\u53BB\u4E86\uFF0C\u8FD9\u6837\u4F1A\u5BFC\u81F4\u8BA4\u8BC1\u6210\u529F\u7684\u4E8B\u4EF6\u91CD\u590D\u53D1\u5E03\uFF09\u3002\u5982\u679C\u7528\u6237\u8BA4\u8BC1\u6210\u529F\uFF0C\u6B64\u65F6\u5C31\u5C06 result \u8FD4\u56DE\uFF0C\u540E\u9762\u7684\u4EE3\u7801\u4E5F\u5C31\u4E0D\u518D\u6267\u884C\u4E86\u3002</li><li>\u5982\u679C\u524D\u9762\u6CA1\u80FD\u8FD4\u56DE result\uFF0C\u8BF4\u660E\u8BA4\u8BC1\u5931\u8D25\u3002\u5982\u679C <code>lastException</code> \u4E3A null\uFF0C\u8BF4\u660E <code>parent</code> \u4E3A null \u6216\u8005 \u6CA1\u6709\u8BA4\u8BC1\u4EA6\u6216\u8005\u8BA4\u8BC1\u5931\u8D25\u4E86\u4F46\u662F\u6CA1\u6709\u629B\u51FA\u5F02\u5E38\uFF0C\u6B64\u65F6\u6784\u9020 <code>ProviderNotFoundException</code> \u5F02\u5E38\u8D4B\u503C\u7ED9 <code>lastException</code>\u3002</li><li>\u5982\u679C parentException \u4E3A null\uFF0C\u53D1\u5E03\u8BA4\u8BC1\u5931\u8D25\u4E8B\u4EF6\uFF08\u5982\u679C parentException \u4E0D\u4E3A null\uFF0C\u5219\u8BF4\u660E\u8BA4\u8BC1\u5931\u8D25\u4E8B\u4EF6\u5DF2\u7ECF\u53D1\u5E03\u8FC7\u4E86\uFF09</li><li>\u6700\u540E\u629B\u51FA lastException \u5F02\u5E38\u3002</li></ol><p>\u73B0\u5728\uFF0C\u5927\u5BB6\u5DF2\u7ECF\u719F\u6089\u4E86 Authentication\u3001AuthenticationManager\u3001AuthenticationProvider \u4EE5 \u53CA ProviderManager \u7684\u5DE5\u4F5C\u539F\u7406\u4E86\uFF0C\u63A5\u4E0B\u6765\u7684\u95EE\u9898\u5C31\u662F\u8FD9\u4E9B\u7EC4\u4EF6\u5982\u4F55\u8DDF\u767B\u5F55\u5173\u8054\u8D77\u6765\uFF1F\u8FD9\u5C31\u6D89 \u53CA\u4E00\u4E2A\u91CD\u8981\u7684\u8FC7\u6EE4\u5668\u2014\u2014 <code>AbstractAuthenticationProcessingFilter</code>\u3002</p><h3 id="abstractauthenticationprocessingfilter" tabindex="-1"><a class="header-anchor" href="#abstractauthenticationprocessingfilter" aria-hidden="true">#</a> AbstractAuthenticationProcessingFilter</h3><p>\u4F5C\u4E3A Spring Security \u8FC7\u6EE4\u5668\u4E2D\u7684\u4E00\u73AF\uFF0C<code>AbstractAuthenticationProcessingFilter</code> \u53EF\u4EE5\u7528\u6765\u5904\u7406\u4EFB\u4F55\u63D0\u4EA4\u7ED9\u5B83\u7684\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u56FE 3-3 \u63CF\u8FF0\u4E86 <code>AbstractAuthenticationProcessingFilter</code> \u7684\u5DE5\u4F5C\u6D41\u7A0B\u3002</p><p><img src="https://img.zxqs.top/20220905165139.png" alt="3-3"></p><p>\u56FE\u4E2D\u663E\u793A\u7684\u6D41\u7A0B\u662F\u4E00\u4E2A\u901A\u7528\u7684\u67B6\u6784\u3002<code>AbstractAuthenticationProcessingFilter</code> \u4F5C\u4E3A\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u5982\u679C\u4F7F\u7528\u7528\u6237\u540D/\u5BC6\u7801\u7684\u65B9\u5F0F\u767B\u5F55\uFF0C\u90A3\u4E48\u5B83\u5BF9\u5E94\u7684\u5B9E\u73B0\u7C7B\u662F <code>UsernamePasswordAuthenticationFilter</code>\uFF0C\u6784\u9020\u51FA\u6765\u7684 Authentication \u5BF9\u8C61\u5219\u662F UsernamePassworldAuthenticationToken\u3002\u81F3\u4E8E AuthenticationManager\uFF0C\u524D\u9762\u5DF2\u7ECF\u8BF4\u8FC7\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u5B83\u7684\u5B9E\u73B0\u7C7B\u5C31\u662F <code>ProviderManager</code>\uFF0C\u8FD9\u91CC\u5728 <code>ProviderManager</code> \u4E2D\u8FDB\u884C\u8BA4\u8BC1\uFF0C\u8BA4\u8BC1\u6210\u529F\u5C31\u4F1A\u8FDB\u5165\u8BA4\u8BC1\u6210\u529F\u7684\u56DE\u8C03\uFF0C\u5426\u5219\u8FDB\u5165\u5931\u8D25\u7684\u56DE\u8C03\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u4E0A\u9762\u7684\u6D41\u7A0B\u56FE\u518D\u505A\u8FDB\u4E00\u6B65\u7EC6\u5316\uFF0C\u5982\u56FE 3-4 \u6240\u793A\u3002</p><p><img src="https://img.zxqs.top/20220906140032.png" alt="3-4"></p><p>\u524D\u9762\u6240\u6D89\u53CA\u7684\u8BA4\u8BC1\u6D41\u7A0B\u57FA\u672C\u4E0A\u5C31\u662F\u8FD9\u6837\uFF0C\u6211\u4EEC\u6765\u5927\u81F4\u68B3\u7406\u4E00\u4E0B\uFF1A</p><ol><li>\u5F53\u7528\u6237\u63D0\u4EA4\u767B\u5F55\u8BF7\u6C42\u65F6\uFF0CUsernamePasswordAuthenticationFilter \u4F1A\u4ECE\u5F53\u524D\u8BF7\u6C42 HttpServletRequest \u4E2D\u63D0\u53D6\u51FA\u767B\u5F55 \u7528\u6237\u540D/\u5BC6\u7801\uFF0C\u7136\u540E\u521B\u5EFA\u4E00\u4E2A UsernamePasswordAuthenticationToken \u5BF9\u8C61\u3002</li><li>UsernamePasswordAuthenticationToken \u5BF9\u8C61\u88AB\u4F20\u5165 ProviderManager \u4E2D\u8FDB\u884C\u5177\u4F53\u7684\u8BA4\u8BC1\u64CD\u4F5C</li><li>\u5982\u679C\u8BA4\u8BC1\u5931\u8D25\uFF0C\u5219 SecurityContextHolder \u4E2D\u76F8\u5173\u4FE1\u606F\u5C06\u88AB\u5220\u9664\uFF0C\u767B\u5F55\u5931\u8D25\u56DE\u8C03\u4E5F\u4F1A\u88AB\u8C03\u7528</li><li>\u5982\u679C\u8BA4\u8BC1\u6210\u529F\uFF0C\u5219\u4F1A\u8FDB\u884C\u767B\u5F55\u4FE1\u606F\u5B58\u50A8\u3001Session\u5E76\u53D1\u5904\u7406\u3001\u767B\u5F55\u6210\u529F\u4E8B\u4EF6\u53D1\u5E03\u4EE5\u53CA\u767B\u5F55\u6210\u529F\u65B9\u6CD5\u56DE\u8C03\u7B49\u64CD\u4F5C\u3002</li></ol><p>\u8FD9\u662F\u8BA4\u8BC1\u7684\u4E00\u4E2A\u5927\u81F4\u6D41\u7A0B\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u7ED3\u5408 <code>AbstractAuthenticationProcessingFilter</code> \u548C <code>UsernamePasswordAuthenticationFilter</code> \u7684\u6E90\u7801\u6765\u770B\u4E00\u4E0B\u3002</p><p>\u5148\u6765\u770B <code>AbstractAuthenticationProcessingFilter</code> \u6E90\u7801\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractAuthenticationProcessingFilter</span> <span class="token keyword">extends</span> <span class="token class-name">GenericFilterBean</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">,</span> <span class="token class-name">MessageSourceAware</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> res<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>

		<span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> req<span class="token punctuation">;</span>
		<span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> res<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">requiresAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Request is to process authentication&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">Authentication</span> authResult<span class="token punctuation">;</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			authResult <span class="token operator">=</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>authResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// return immediately as subclass has indicated that it hasn&#39;t completed</span>
				<span class="token comment">// authentication</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			sessionStrategy<span class="token punctuation">.</span><span class="token function">onAuthentication</span><span class="token punctuation">(</span>authResult<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InternalAuthenticationServiceException</span> failed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
					<span class="token string">&quot;An internal error occurred while trying to authenticate the user.&quot;</span><span class="token punctuation">,</span>
					failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">unsuccessfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> failed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Authentication failed</span>
			<span class="token function">unsuccessfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Authentication success</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>continueChainBeforeSuccessfulAuthentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token function">successfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">requiresAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> requiresAuthenticationRequestMatcher<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">Authentication</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span>
			<span class="token class-name">ServletException</span><span class="token punctuation">;</span>

	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">successfulAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">,</span> <span class="token class-name">Authentication</span> authResult<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Authentication success. Updating SecurityContextHolder to contain: &quot;</span>
					<span class="token operator">+</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

		rememberMeServices<span class="token punctuation">.</span><span class="token function">loginSuccess</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Fire event</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eventPublisher <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InteractiveAuthenticationSuccessEvent</span><span class="token punctuation">(</span>
					authResult<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		successHandler<span class="token punctuation">.</span><span class="token function">onAuthenticationSuccess</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">unsuccessfulAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">AuthenticationException</span> failed<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
		<span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">clearContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Authentication request failed: &quot;</span> <span class="token operator">+</span> failed<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Updated SecurityContextHolder to contain null Authentication&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Delegating to authentication failure handler &quot;</span> <span class="token operator">+</span> failureHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		rememberMeServices<span class="token punctuation">.</span><span class="token function">loginFail</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>

		failureHandler<span class="token punctuation">.</span><span class="token function">onAuthenticationFailure</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ol><li><p>\u9996\u5148\u901A\u8FC7 requiresAuthentication \u65B9\u6CD5\u6765\u5224\u65AD\u5F53\u524D\u8BF7\u6C42\u662F\u4E0D\u662F\u767B\u5F55\u8BA4\u8BC1\u8BF7\u6C42\uFF0C\u5982\u679C\u662F\u8BA4\u8BC1\u8BF7\u6C42\uFF0C\u5C31\u6267\u884C\u63A5\u4E0B\u6765\u7684\u8BA4\u8BC1\u4EE3\u7801\uFF1B\u5982\u679C\u4E0D\u662F\u8BA4\u8BC1\u8BF7\u6C42\uFF0C\u5219\u76F4\u63A5\u7EE7\u7EED\u8D70\u5269\u4F59\u7684\u8FC7\u6EE4\u5668\u5373\u53EF\u3002</p></li><li><p>\u8C03\u7528 attemptAuthentication \u65B9\u6CD5\u6765\u83B7\u53D6\u4E00\u4E2A\u7ECF\u8FC7\u8BA4\u8BC1\u540E\u7684 Authentication \u5BF9\u8C61\uFF0CattemptAuthentication \u65B9\u6CD5\u662F\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5177\u4F53\u5B9E\u73B0\u5728\u5B83\u7684\u5B50\u7C7B UsernamePasswordAuthenticationFilter \u4E2D</p></li><li><p>\u8BA4\u8BC1\u6210\u529F\u540E\uFF0C\u901A\u8FC7 sessionStrategy.onAuthentication \u6765\u5904\u7406 session \u5E76\u53D1\u95EE\u9898\u3002</p></li><li><p><code>continueChainBeforeSuccessfulAuthentication</code> \u53D8\u91CF\u7528\u6765\u5224\u65AD\u8BF7\u6C42\u662F\u5426\u8FD8\u9700\u8981\u7EE7\u7EED\u5411\u4E0B\u8D70\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8BE5\u53C2\u6570\u7684\u503C\u4E3A false\uFF0C\u5373\u8BA4\u8BC1\u6210\u529F\u540E\uFF0C\u540E\u7EED\u7684\u8FC7\u6EE4\u5668\u5C06\u4E0D\u518D\u6267\u884C\u4E86\u3002</p></li><li><p><code>unsuccessfulAuthentication</code> \u7528\u6765\u5904\u7406\u8BA4\u8BC1\u5931\u8D25\u4E8B\u5B9C\uFF0C\u4E3B\u8981\u505A\u4E86\u4E09\u4EF6\u4E8B</p><ul><li>\u4ECE SecurityContextHolder \u4E2D\u6E05\u9664\u6570\u636E\uFF1B</li><li>\u6E05\u9664 Cookie \u7B49\u4FE1\u606F\uFF1B</li><li>\u8C03\u7528\u8BA4\u8BC1\u5931\u8D25\u7684\u56DE\u8C03\u65B9\u6CD5</li></ul></li><li><p><code>successfulAuthentication</code> \u65B9\u6CD5\u4E3B\u8981\u7528\u6765\u5904\u7406\u8BA4\u8BC1\u6210\u529F\u4E8B\u5B9C\uFF0C\u4E3B\u8981\u505A\u4E86\u56DB\u4EF6\u4E8B</p><ul><li>\u5411 SecurityContextHolder \u4E2D\u5B58\u5165\u7528\u6237\u4FE1\u606F</li><li>\u5904\u7406 Cookie</li><li>\u53D1\u5E03\u8BA4\u8BC1\u6210\u529F\u4E8B\u4EF6\uFF0C\u8FD9\u4E2A\u4E8B\u4EF6\u7C7B\u578B\u662F <code>InteractiveAuthenticationSuccessEvent</code>\uFF0C\u8868\u793A\u901A\u8FC7\u4E00\u4E9B\u81EA\u52A8\u4EA4\u4E92\u65B9\u5F0F\u8BA4\u8BC1\u6210\u529F\uFF0C\u4F8B\u5982\u901A\u8FC7 RememberMe \u7684\u65B9\u5F0F\u767B\u5F55\u3002</li><li>\u8C03\u7528\u8BA4\u8BC1\u6210\u529F\u7684\u56DE\u8C03\u65B9\u6CD5\u3002</li></ul></li></ol><p>\u8FD9\u5C31\u662F <code>AbstractAuthenticationProcessingFilter</code> \u5927\u81F4\u4E0A\u6240\u505A\u7684\u4E8B\u60C5\uFF0C\u8FD8\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5 attemptAuthentication \u662F\u5728\u5B83\u7684\u7EE7\u627F\u7C7B UsernamePasswordAuthenticationFilter \u4E2D\u5B9E\u73B0\u7684\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u770B\u4E00\u4E0B UsernamePasswordAuthenticationFilter \u7C7B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsernamePasswordAuthenticationFilter</span> <span class="token keyword">extends</span>
		<span class="token class-name">AbstractAuthenticationProcessingFilter</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> SPRING_SECURITY_FORM_USERNAME_KEY <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> SPRING_SECURITY_FORM_PASSWORD_KEY <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> usernameParameter <span class="token operator">=</span> SPRING_SECURITY_FORM_USERNAME_KEY<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> passwordParameter <span class="token operator">=</span> SPRING_SECURITY_FORM_PASSWORD_KEY<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">boolean</span> postOnly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>


	<span class="token keyword">public</span> <span class="token class-name">UsernamePasswordAuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AntPathRequestMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>postOnly <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AuthenticationServiceException</span><span class="token punctuation">(</span>
					<span class="token string">&quot;Authentication method not supported: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token function">obtainUsername</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token function">obtainPassword</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			username <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			password <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		username <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">UsernamePasswordAuthenticationToken</span> authRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>
				username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Allow subclasses to set the &quot;details&quot; property</span>
		<span class="token function">setDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> authRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAuthenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">obtainPassword</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span>passwordParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">obtainUsername</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span>usernameParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
			<span class="token class-name">UsernamePasswordAuthenticationToken</span> authRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		authRequest<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span>authenticationDetailsSource<span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsernameParameter</span><span class="token punctuation">(</span><span class="token class-name">String</span> usernameParameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>usernameParameter<span class="token punctuation">,</span> <span class="token string">&quot;Username parameter must not be empty or null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>usernameParameter <span class="token operator">=</span> usernameParameter<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPasswordParameter</span><span class="token punctuation">(</span><span class="token class-name">String</span> passwordParameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>passwordParameter<span class="token punctuation">,</span> <span class="token string">&quot;Password parameter must not be empty or null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>passwordParameter <span class="token operator">=</span> passwordParameter<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPostOnly</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> postOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>postOnly <span class="token operator">=</span> postOnly<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">getUsernameParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> usernameParameter<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">getPasswordParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> passwordParameter<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,38),P=n('\u9996\u5148\u58F0\u660E\u4E86\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u767B\u5F55\u8868\u5355\u7684\u7528\u6237\u540D\u5B57\u6BB5\u548C\u5BC6\u7801\u5B57\u6BB5\uFF0C\u7528\u6237\u540D\u5B57\u6BB5\u7684key\u9ED8\u8BA4\u662Fusername\uFF0C\u5BC6\u7801\u5B57\u6BB5\u7684key\u9ED8\u8BA4\u662Fpassword\u3002\u5F53\u7136\uFF0C\u8FD9\u4E24\u4E2A\u5B57\u6BB5\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\uFF0C\u81EA\u5B9A\u4E49\u7684\u65B9 \u5F0F \u5C31 \u662F \u6211 \u4EEC \u5728 SecurityConfig \u4E2D \u914D \u7F6E \u7684 .usernameParameter("uname") \u548C .passwordParameter("passwd") \u53C2\u8003 '),S=n("\u767B\u5F55\u8868\u5355\u914D\u7F6E"),b=s("li",null,[n("\u5728 UsernamePasswordAuthenticationFilter \u8FC7\u6EE4\u5668\u6784\u5EFA\u7684\u65F6\u5019\uFF0C\u6307\u5B9A\u4E86\u5F53\u524D\u8FC7\u6EE4\u5668\u53EA\u7528\u6765\u5904\u7406\u767B\u5F55\u8BF7\u6C42\uFF0C\u9ED8\u8BA4\u7684\u767B\u5F55\u8BF7\u6C42\u662F "),s("code",null,"/login"),n("\uFF0C\u5F53\u7136\u5F00\u53D1\u8005\u4E5F\u53EF\u4EE5\u81EA\u884C\u914D\u7F6E\u3002")],-1),x=s("li",null,"\u63A5\u4E0B\u6765\u5C31\u662F\u6700\u91CD\u8981\u7684 attemptAuthentication \u65B9\u6CD5\u4E86\uFF0C\u5728\u8BE5\u65B9\u6CD5\u4E2D\uFF0C\u9996\u5148\u786E\u8BA4\u8BF7\u6C42\u662F post \u7C7B\u578B\uFF1B\u7136\u540E\u901A\u8FC7 obtainUsername \u548C obtainPassword \u65B9\u6CD5\u5206\u522B\u4ECE\u8BF7\u6C42\u4E2D\u63D0\u53D6\u51FA\u7528\u6237\u540D\u548C\u5BC6\u7801\uFF0C\u5177\u4F53\u7684\u63D0\u53D6\u8FC7\u7A0B\u5C31\u662F\u8C03\u7528 request.getParameter \u65B9\u6CD5\uFF1B\u62FF\u5230\u767B\u5F55\u8BF7\u6C42\u4F20\u6765\u7684\u7528\u6237\u540D/\u5BC6\u7801\u4E4B\u540E\uFF0C\u6784\u9020\u51FA\u4E00\u4E2A authRequest\uFF0C\u7136\u540E\u8C03\u7528 getAuthenticationManager().authenticate \u65B9\u6CD5\u8FDB\u884C\u8BA4\u8BC1\uFF0C\u8FD9\u5C31\u8FDB\u5165\u5230\u6211\u4EEC\u524D\u9762\u6240\u8BF4\u7684 ProviderManager \u7684\u6D41\u7A0B\u4E2D\u4E86\uFF0C\u5177\u4F53\u8BA4\u8BC1\u8FC7\u7A0B\u5C31\u4E0D\u518D\u8D58\u8FF0\u4E86\u3002",-1),E=a(`<p>\u4EE5\u4E0A\u5C31\u662F\u6574\u4E2A\u8BA4\u8BC1\u6D41\u7A0B\u3002</p><p>\u641E\u61C2\u4E86\u8BA4\u8BC1\u6D41\u7A0B\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u5982\u679C\u60F3\u8981\u81EA\u5B9A\u4E49\u4E00\u4E9B\u8BA4\u8BC1\u65B9\u5F0F\uFF0C\u5C31\u4F1A\u975E\u5E38\u5BB9\u6613\u4E86\uFF0C\u6BD4\u5982\u5B9A\u4E49\u591A\u4E2A\u6570\u636E\u6E90\u3001\u6DFB\u52A0\u767B\u5F55\u6821\u9A8C\u7801\u7B49\u3002\u4E0B\u9762\uFF0C\u6211\u4EEC\u5C06\u901A\u8FC7\u4E24\u4E2A\u6848\u4F8B\uFF0C\u6765\u6D3B\u5B66\u6D3B\u7528\u4E0A\u9762\u6240\u8BB2\u7684\u8BA4\u8BC1\u6D41\u7A0B\u3002</p><h2 id="\u6DFB\u52A0\u767B\u5F55\u9A8C\u8BC1\u7801" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u767B\u5F55\u9A8C\u8BC1\u7801" aria-hidden="true">#</a> \u6DFB\u52A0\u767B\u5F55\u9A8C\u8BC1\u7801</h2><p>\u767B\u5F55\u9A8C\u8BC1\u7801\u662F\u9879\u76EE\u4E2D\u4E00\u4E2A\u5E38\u89C1\u7684\u9700\u6C42\uFF0C\u4F46\u662F Spring Security \u5BF9\u6B64\u5E76\u672A\u63D0\u4F9B\u81EA\u52A8\u5316\u914D\u7F6E\u7684\u65B9\u6848\uFF0C\u9700\u8981\u5F00\u53D1\u8005\u81EA\u884C\u5B9A\u4E49\u3002\u4E00\u822C\u6765\u8BF4\uFF0C\u6709\u4E24\u79CD\u5B9E\u73B0\u767B\u5F55\u9A8C\u8BC1\u7801\u7684\u601D\u8DEF\uFF1A</p><ol><li>\u81EA\u5B9A\u4E49\u8FC7\u6EE4\u5668</li><li>\u81EA\u5B9A\u4E49\u8BA4\u8BC1\u903B\u8F91</li></ol><p>\u901A\u8FC7\u81EA\u5B9A\u4E49\u8FC7\u6EE4\u5668\u6765\u5B9E\u73B0\u767B\u5F55\u9A8C\u8BC1\u7801\uFF0C\u8FD9\u79CD\u65B9\u6848\u6211\u4EEC\u4F1A\u5728\u540E\u9762\u7684\u8FC7\u6EE4\u5668\u4E2D\u4ECB\u7ECD\uFF0C\u8FD9\u91CC\u5148\u6765\u770B\u5982\u4F55\u901A\u8FC7\u81EA\u5B9A\u4E49\u8BA4\u8BC1\u903B\u8F91\u5B9E\u73B0\u6DFB\u52A0\u767B\u5F55\u9A8C\u8BC1\u7801\u529F\u80FD\u3002</p><p>\u751F\u6210\u9A8C\u8BC1\u7801\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E2A\u751F\u6210\u5DE5\u5177\u7C7B\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E9B\u73B0\u6210\u7684\u5F00\u6E90\u5E93\u6765\u5B9E\u73B0\u3002\u8FD9\u91CC\u91C7\u7528\u5F00\u6E90\u5E93 kaptcha\uFF0C\u9996\u5148\u5F15\u5165 kaptcha \u4F9D\u8D56\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.penggle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kaptcha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u7136\u540E\u5BF9 kaptcha \u8FDB\u884C\u914D\u7F6E\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KaptchaConfig</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token class-name">Producer</span> <span class="token function">kaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha.image.width&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;150&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha.image.height&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;50&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha.textproducer.char.string&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0123456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha.textproducer.char.length&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Config</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">DefaultKaptcha</span> defaultKaptcha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			defaultKaptcha<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> defaultKaptcha<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>\u914D\u7F6E\u4E00\u4E2A Producer \u5B9E\u4F8B\uFF0C\u4E3B\u8981\u914D\u7F6E\u4E00\u4E0B\u751F\u6210\u7684\u56FE\u7247\u9A8C\u8BC1\u7801\u7684\u5BBD\u5EA6\u3001\u957F\u5EA6\u3001\u751F\u6210\u5B57\u7B26\u3001\u9A8C\u8BC1\u7801\u7684\u957F\u5EA6\u7B49\u4FE1\u606F\u3002\u914D\u7F6E\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728 Controller \u4E2D\u5B9A\u4E49\u4E00\u4E2A\u9A8C\u8BC1\u7801\u63A5\u53E3\u4E86\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token class-name">Producer</span> producer<span class="token punctuation">;</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/vc.jpg&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getVerifyCode</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
		resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;image/jpeg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> text <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha&quot;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">BufferedImage</span> image <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">ServletOutputStream</span> out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u8FD9\u4E2A\u9A8C\u8BC1\u7801\u63A5\u53E3\u4E2D\uFF0C\u6211\u4EEC\u4E3B\u8981\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><ol><li>\u751F\u6210\u9A8C\u8BC1\u7801\u6587\u672C\uFF0C\u5C06\u6587\u672C\u5B58\u5165 HttpSession \u4E2D\u3002</li><li>\u6839\u636E\u9A8C\u8BC1\u7801\u6587\u672C\u751F\u6210\u9A8C\u8BC1\u7801\u56FE\u7247\uFF0C\u5E76\u901A\u8FC7 IO \u6D41\u5199\u51FA\u5230\u524D\u7AEF\u3002</li></ol><p>\u63A5\u4E0B\u6765\u4FEE\u6539\u767B\u5F55\u8868\u5355\uFF0C\u52A0\u5165\u9A8C\u8BC1\u7801\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login-form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/doLogin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center text-info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u767B\u5F55<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${SPRING_SECURITY_LAST_EXCEPTION}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u7528\u6237\u540D:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u5BC6\u7801:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>passwd<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kaptcha<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u9A8C\u8BC1\u7801:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kaptcha<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kaptcha<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/vc.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-info btn-md<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u767B\u5F55<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5728\u767B\u5F55\u8868\u5355\u4E2D\u589E\u52A0\u4E00\u4E2A\u9A8C\u8BC1\u7801\u8F93\u5165\u6846\uFF0C\u9A8C\u8BC1\u7801\u7684\u56FE\u7247\u5730\u5740\u5C31\u662F\u6211\u4EEC\u5728 Controller \u4E2D\u5B9A\u4E49\u7684\u9A8C\u8BC1\u7801\u63A5\u53E3\u5730\u5740\u3002</p><p>\u63A5\u4E0B\u6765\u5C31\u662F\u9A8C\u8BC1\u7801\u7684\u6821\u9A8C\u4E86\u3002\u7ECF\u8FC7\u524D\u9762\u7684\u4ECB\u7ECD\uFF0C\u8BFB\u8005\u5DF2\u7ECF\u4E86\u89E3\u5230\uFF0C\u8EAB\u4EFD\u8BA4\u8BC1\u5B9E\u9645\u4E0A\u5C31\u662F\u5728 AuthenticationProvider#authenticate \u65B9\u6CD5\u4E2D\u5B8C\u6210\u7684\u3002\u6240\u4EE5\uFF0C\u9A8C\u8BC1\u7801\u7684\u6821\u9A8C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u8BE5\u65B9\u6CD5\u6267\u884C\u4E4B\u524D\u8FDB\u884C\uFF0C\u9700\u8981\u914D\u7F6E\u5982\u4E0B\u7C7B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KaptchaAuthenticationProvider</span> <span class="token keyword">extends</span> <span class="token class-name">DaoAuthenticationProvider</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token class-name">HttpServletRequest</span> req <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> kaptcha <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> sessionKaptcha <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;kaptcha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>kaptcha <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> sessionKaptcha <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> kaptcha<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>sessionKaptcha<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AuthenticationServiceException</span><span class="token punctuation">(</span><span class="token string">&quot;\u9A8C\u8BC1\u7801\u8F93\u5165\u9519\u8BEF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u91CD\u5199 authenticate \u65B9\u6CD5\uFF0C\u5728 authenticate \u65B9\u6CD5\u4E2D\uFF0C\u4ECE RequestContextHolder \u4E2D\u83B7\u53D6\u5F53\u524D\u8BF7\u6C42\uFF0C\u8FDB\u800C\u83B7\u53D6\u5230\u9A8C\u8BC1\u7801\u53C2\u6570\u548C\u5B58\u50A8\u5728 HttpSession \u4E2D\u7684\u9A8C\u8BC1\u7801\u6587\u672C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u6BD4\u8F83\u901A\u8FC7\u5219\u7EE7\u7EED\u6267\u884C\u7236\u7C7B\u7684 authenticate \u65B9\u6CD5\uFF0C\u6BD4\u8F83\u4E0D\u901A\u8FC7\uFF0C\u5C31\u629B\u51FA\u5F02\u5E38</p><p>\u6700\u540E\uFF0C\u5728 SecurityConfig \u4E2D\u914D\u7F6E AuthenticationManager\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token class-name">UserDetailsService</span> <span class="token function">us1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">&quot;javaboy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">&quot;{noop}123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token class-name">AuthenticationProvider</span> <span class="token function">kaptchaAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">KaptchaAuthenticationProvider</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KaptchaAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		provider<span class="token punctuation">.</span><span class="token function">setUserDetailsService</span><span class="token punctuation">(</span><span class="token function">us1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> provider<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">AuthenticationManager</span> <span class="token function">authenticationManagerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">ProviderManager</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProviderManager</span><span class="token punctuation">(</span><span class="token function">kaptchaAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> manager<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/vc.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token comment">//\u7701\u7565</span>
	<span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u914D\u7F6E\u5206\u4E09\u6B65 \uFF1A \u9996\u5148\u914D\u7F6E UserDetailsService \u63D0\u4F9B\u6570\u636E\u6E90 \uFF1B \u7136\u540E\u63D0\u4F9B\u4E00\u4E2A <code>AuthenticationProvider</code> \u5B9E\u4F8B\u5E76\u914D\u7F6E <code>UserDetailsService</code>\uFF1B\u6700\u540E\u91CD\u5199 <code>authenticationManagerBean</code> \u65B9\u6CD5\uFF0C\u63D0\u4F9B\u4E00\u4E2A\u81EA\u5DF1\u7684 <code>ProviderManager</code> \u5E76\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684 AuthenticationProvider \u5B9E\u4F8B\u3002</p><p>\u53E6\u5916\u9700\u8981\u6CE8\u610F\uFF0C\u5728 <code>configure(HttpSecurity)</code> \u65B9\u6CD5\u4E2D\u7ED9\u9A8C\u8BC1\u7801\u63A5\u53E3\u914D\u7F6E\u653E\u884C\uFF0C<code>permitAll</code> \u8868\u793A\u8FD9\u4E2A\u63A5\u53E3\u4E0D\u9700\u8981\u767B\u5F55\u5C31\u53EF\u4EE5\u8BBF\u95EE\u3002</p><p>\u914D\u7F6E\u5B8C\u6210\u540E\uFF0C\u542F\u52A8\u9879\u76EE\uFF0C\u6D4F\u89C8\u5668\u4E2D\u8F93\u5165\u4EFB\u610F\u5730\u5740\u90FD\u4F1A\u8DF3\u8F6C\u5230\u767B\u5F55\u9875\u9762\uFF0C\u5982\u56FE 3-5 \u6240\u793A\u3002</p><p><img src="https://img.zxqs.top/20220907111358.png" alt="3-5"></p><p>\u6B64\u65F6\uFF0C\u8F93\u5165\u7528\u6237\u540D\u3001\u5BC6\u7801\u4EE5\u53CA\u9A8C\u8BC1\u7801\u5C31\u53EF\u4EE5\u6210\u529F\u767B\u5F55\u3002\u5982\u679C\u9A8C\u8BC1\u7801\u8F93\u5165\u9519\u8BEF\uFF0C\u5219\u767B\u5F55\u9875\u9762\u4F1A\u81EA\u52A8\u5C55\u793A\u9519\u8BEF\u4FE1\u606F\u3002</p>`,27);function U(C,D){const t=e("RouterLink");return l(),c(u,null,[r,s("p",null,[d,p(t,{to:"/springsecurity2/Authentication.html#%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96"},{default:o(()=>[h]),_:1}),g,w,m,y,f,A,v]),q,s("ol",null,[s("li",null,[P,p(t,{to:"/springsecurity2/Authentication.html#%E9%85%8D%E7%BD%AE%E7%BB%86%E8%8A%82"},{default:o(()=>[S]),_:1})]),b,x]),E],64)}var _=i(k,[["render",U]]);export{_ as default};
