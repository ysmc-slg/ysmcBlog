(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{507:function(t,a,s){"use strict";s.r(a);var n=s(32),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"静态资源访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态资源访问"}},[t._v("#")]),t._v(" 静态资源访问")]),t._v(" "),s("p",[t._v("在 SpringMVC 中，静态资源，默认都是被拦截的，例如 html、js、css、jpg、png、txt、pdf 等等，都是无法直接访问的。因为所有请求都被拦截了，所以，针对静态资源，我们要做额外处理，处理方式很简单，直接在 SpringMVC 的配置文件中，添加如下内容：")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("resources")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mapping")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/static/html/**"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/static/html/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("mapping 表示映射规则，也是拦截规则，就是说，如果请求地址是 "),s("code",[t._v("/static/html")]),t._v(" 这样的格式的话，那么对应的资源就去 "),s("code",[t._v("/static/html/")]),t._v(" 这个目录下查找。会自动将mapping "),s("code",[t._v("*")]),t._v(" 后面的地址，补充道 "),s("code",[t._v("location")]),t._v(" 的后面\n在映射路径的定义中，最后是两个 "),s("code",[t._v("*")]),t._v("，这是一种 Ant 风格的路径匹配符号，一共有三个通配符：")])])}),[],!1,null,null,null);a.default=e.exports}}]);