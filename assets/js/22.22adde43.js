(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{451:function(t,e,v){"use strict";v.r(e);var _=v(32),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),v("p",[t._v("每个 "),v("code",[t._v("Vue")]),t._v(" 实例在被创建时都要经历一系列的初始化过程，例如：需要设置数据的监听，编译模板，将实例挂载到"),v("code",[t._v("DOM")]),t._v(" 上，并且在数据变化时更新 "),v("code",[t._v("DOM")]),t._v(" 等，这些过程统称为 "),v("code",[t._v("Vue")]),t._v(" 实例的生命周期。同时在这个过程中也会运行一些叫做 "),v("code",[t._v("生命周期钩子的函数")]),t._v(" ，这给了用户在不同阶段添加自己的代码的机会。")]),t._v(" "),v("p",[t._v("先来看一张图")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blogImg/vue/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg",alt:"生命周期"}})]),t._v(" "),v("p",[v("code",[t._v("Vue")]),t._v(" 的声明周期主要分为三个阶段，分别是")]),t._v(" "),v("ul",[v("li",[t._v("挂载（初始化相关属性,例如 "),v("code",[t._v("watch")]),t._v(" 属性，"),v("code",[t._v("method")]),t._v(" 属性）")]),t._v(" "),v("li",[t._v("更新（元素或组件的变更操作）")]),t._v(" "),v("li",[t._v("销毁（销毁相关属性）")])]),t._v(" "),v("p",[t._v("每个阶段还有不同的钩子函数，下面我们一一讲解。")]),t._v(" "),v("h2",{attrs:{id:"挂载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#挂载"}},[t._v("#")]),t._v(" 挂载")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("在 "),v("code",[t._v("new Vue({})")]),t._v(" 时，生命周期就已经开始了，可以看上面的图片，首先"),v("code",[t._v("Init Events & Lifecycle")]),t._v(" 进行初始化。")])]),t._v(" "),v("li",[v("p",[t._v("然后触发 "),v("code",[t._v("beforeCreate")]),t._v(" 钩子，此时数据还没进行绑定，所以拿不到 "),v("code",[t._v("data")]),t._v(" 中的数据")])]),t._v(" "),v("li",[v("p",[t._v("此时来到 "),v("code",[t._v("Init injections & reactivity")]),t._v("，这里主要是，初始化会被使用到的状态，状态包括 "),v("code",[t._v("props")]),t._v(","),v("code",[t._v("methods")]),t._v(","),v("code",[t._v("data")]),t._v(","),v("code",[t._v("computed")]),t._v(","),v("code",[t._v("watch")]),t._v("。而且会实现对 "),v("code",[t._v("data")]),t._v(" 中属性的监听，进行数据代理将 "),v("code",[t._v("data")]),t._v(" 绑定到 VM")])]),t._v(" "),v("li",[v("p",[t._v("触发 "),v("code",[t._v("created")]),t._v(" 钩子，此时就可以通过 "),v("code",[t._v("vm")]),t._v(" 获取到 "),v("code",[t._v("data")]),t._v(" 中的数据和"),v("code",[t._v("methods")]),t._v(" 中的方法。此时是无法获取 "),v("code",[t._v("Dom")]),t._v(" 的因为页面还没有进行解析。")]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"created"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"el==="')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n       console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data=="')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$data"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以获取数据")]),t._v("\n       console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo=="')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以获取数据")]),t._v("\n     "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("created")]),t._v(" 钩子执行完毕之后，下面会判断 "),v("code",[t._v("vue")]),t._v(" 中有没有 "),v("code",[t._v("el")]),t._v(" 选项。如果有，继续执行下面的流程，判断是否有 "),v("code",[t._v("template")]),t._v(" 选项。")]),t._v(" "),v("ul",[v("li",[t._v("如果 "),v("code",[t._v("Vue")]),t._v(" 中有 "),v("code",[t._v("template")]),t._v(" 参数选项，则将其作为模板编译成 "),v("code",[t._v("render")]),t._v(" 函数，来完成渲染")]),t._v(" "),v("li",[t._v("如果没有 "),v("code",[t._v("template")]),t._v(" 参数选项，则将外部的 "),v("code",[t._v("HTML")]),t._v(" 作为编译模板("),v("code",[t._v("template")]),t._v(")，也就是说，"),v("code",[t._v("template")]),t._v(" 参数选项的优先级要比外部的 "),v("code",[t._v("HTML")]),t._v(" 高，如果同时有 "),v("code",[t._v("template")]),t._v(" 模板与外部的 "),v("code",[t._v("html")]),t._v(" ，则会优先渲染 "),v("code",[t._v("template")]),t._v(" 里面的数据")])]),t._v(" "),v("p",[t._v("再回过头看如果没有 "),v("code",[t._v("el")]),t._v(" 选项，则停止整个生命周期的流程，直到执行了"),v("code",[t._v("vm.$mount(el)")]),t._v("。")]),t._v(" "),v("p",[t._v("此时模板已经生成了 "),v("code",[t._v("虚拟DOM")]),t._v("，但是页面还不能显示解析好的内容。")])]),t._v(" "),v("li",[v("p",[t._v("接下来就触发 "),v("code",[t._v("beforeMount")]),t._v(" 这个钩子函数，在执行该钩子函数的时候，虚拟"),v("code",[t._v("DOM")]),t._v("已经创建完成，马上就要渲染了，但是在这里可以更改 "),v("code",[t._v("data")]),t._v(" 中的数据或者对"),v("code",[t._v("DOM")]),t._v(" 记性操作，最终都是不奏效的，因为不会执行 "),v("code",[t._v("updated")]),t._v("。")])]),t._v(" "),v("li",[v("p",[t._v("接下来将虚拟DOM 转为真实DOM 插入页面。创建一个 "),v("code",[t._v("$el")]),t._v(" 保存真实DOM，用于复用。")])]),t._v(" "),v("li",[v("p",[t._v("页面渲染完成后，触发 "),v("code",[t._v("mounted")]),t._v(" 钩子函数。这时对"),v("code",[t._v("data")]),t._v(" 或 "),v("code",[t._v("DOM")]),t._v(" 操作都会奏效，会执行 "),v("code",[t._v("updated")]),t._v(" 钩子函数进行更新。")])])]),t._v(" "),v("p",[t._v("至此挂载阶段完成，下面是更新阶段。")]),t._v(" "),v("h2",{attrs:{id:"更新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[t._v("#")]),t._v(" 更新")]),t._v(" "),v("p",[t._v("当整个组件挂在完成后，有可能会进行数据的修改，当 "),v("code",[t._v("Vue")]),t._v(" 发现 "),v("code",[t._v("data")]),t._v(" 中的数据发生了变化，会触发对应组件的重新渲染，先后调用了"),v("code",[t._v("beforeUpdate")]),t._v(" 和"),v("code",[t._v("updated")]),t._v(" 钩子函数。")]),t._v(" "),v("p",[t._v("在 "),v("code",[t._v("beforeUpdate")]),t._v("时 虽然"),v("code",[t._v("data")]),t._v(" 中的数据已经是修改后的，但是页面依旧是之前的数据。")]),t._v(" "),v("p",[t._v("在 "),v("code",[t._v("updated")]),t._v(" 之前 "),v("code",[t._v("beoreUpdate")]),t._v(" 之后有一个非常重要的操作就是虚拟DOM会重新构建，也就是新构建的虚拟DOM与上一次的虚拟DOM树利用 "),v("code",[t._v("diff")]),t._v(" 算法进行对比之后重新渲染。")]),t._v(" "),v("p",[t._v("而到了updated这个方法，就表示数据已经更新完成，dom也重新render完成。")]),t._v(" "),v("h2",{attrs:{id:"销毁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#销毁"}},[t._v("#")]),t._v(" 销毁")]),t._v(" "),v("p",[t._v("下面如果我们调用了 "),v("code",[t._v("vm.$destroy")]),t._v(" 方法后，就会销毁所有的资源。")]),t._v(" "),v("p",[t._v("首先会执行"),v("code",[t._v("beforeDestroy")]),t._v(" 这个钩子函数，这个钩子函数在实例销毁前调用，在这一步，实例仍然可用。在该方法中，可以做一些清理的工作，例如：清除定时器等。")]),t._v(" "),v("p",[t._v("但是执行到"),v("code",[t._v("destroyed")]),t._v("钩子函数的时候，"),v("code",[t._v("Vue")]),t._v("实例已经被销毁，所有的事件监听器会被移除，所有的子实例也会被销毁")]),t._v(" "),v("p",[v("strong",[t._v("总结：")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[v("code",[t._v("beforeCreate()")]),t._v("     该钩子函数执行时，组件实例还未创建.\n"),v("code",[t._v("created()")]),t._v("          组件初始化完毕，各种数据可以使用，可以使用ajax发送异步请求获取数据\n"),v("code",[t._v("beforeMounted()")]),t._v("    未执行渲染，更新，虚拟DOM完成，真实DOM未创建\n"),v("code",[t._v("mounted()")]),t._v("          初始化阶段结束，真实DOM已经创建，可以发送异步请求获取数据,也可以访问dom元素\n"),v("code",[t._v("beforeUpdate()")]),t._v("     更新前，可用于获取更新前各种状态数据\n"),v("code",[t._v("updated()")]),t._v("          更新后执行该钩子函数，所有的状态数据是最新的。\n"),v("code",[t._v("beforeDestroy()")]),t._v("    销毁前执行，可以用于一些定时器的清除。\n"),v("code",[t._v("destroyed()")]),t._v("        组件已经销毁，事件监听器被移除，所有的子实例也会被销毁。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);