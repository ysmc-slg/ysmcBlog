(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{448:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("上面两种模式，一个消息只能被一个消费者接收。如果想让一个消息被多个消费者接受，上面两种模式就不行了。")]),t._v(" "),s("p",[t._v("在实现一个消息被多个消费者接收之前先说一下"),s("code",[t._v("Exchanges（交换机）")])]),t._v(" "),s("h2",{attrs:{id:"exchange-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exchange-概念"}},[t._v("#")]),t._v(" Exchange 概念")]),t._v(" "),s("p",[t._v("RabbitMQ 消息传递模型的核心思想是: "),s("code",[t._v("生产者生产的消息从不会直接发送到队列")]),t._v("。实际上，通常生产者甚至都不知道这些消息传递传递到了哪些队列中。")]),t._v(" "),s("p",[t._v("相反，"),s("code",[t._v("生产者只能将消息发送到交换机(exchange)")]),t._v("，交换机工作的内容非常简单，一方面它接收来自生产者的消息，另一方面将它们推入队列。交换机必须确切知道如何处理收到的消息。是应该把这些消息放到特定队列还是说把他们到许多队列中还是说应该丢弃它们。这就的由交换机的类型来决定。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/blogImg/rabbitmq/021-08-09_10-37-31.png",alt:"Exchange 概念"}})]),t._v(" "),s("p",[t._v("为什么我们之前没用"),s("code",[t._v("Exchange")]),t._v("也能正常使用呢？")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" channel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicPublish")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("QUEUE_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在发送消息时，第一个参数是交换机，然而我们用的是空串，这时用的就是rabbitmq默认的交换机。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/blogImg/rabbitmq/%E9%BB%98%E8%AE%A4%E4%BA%A4%E6%8D%A2%E6%9C%BA.png",alt:"默认交换机"}})]),t._v(" "),s("h3",{attrs:{id:"绑定-bindings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定-bindings"}},[t._v("#")]),t._v(" 绑定(bindings)")]),t._v(" "),s("p",[t._v("什么是 bingding 呢，binding 其实是 exchange 和 queue 之间的桥梁，它告诉我们 exchange 和那个队列进行了绑定关系。比如说下面这张图告诉我们的就是 X 与 Q1 和 Q2 进行了绑定")]),t._v(" "),s("p",[s("img",{attrs:{src:"/blogImg/rabbitmq/binding.png",alt:"binding"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);