(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{455:function(t,e,a){"use strict";a.r(e);var i=a(32),c=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("下面配置项说明并不全，了解更多请检阅redis.conf。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("序号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("配置项")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("daemonize no")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Redis 默认不是以守护进程的方式运行，可以通过该配置项修改，"),a("br"),t._v("使用 yes 启用守护进程")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("pidfile /var/run/redis.pid")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("当 Redis 以守护进程方式运行时，Redis 默认会把 pid 写入 /var/run/redis.pid 文件，可以通过 pidfile 指定")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("port 6379")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定 Redis 监听端口，默认端口为 6379")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("bind 127.0.0.1")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("绑定的主机地址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("timeout 300")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("当客户端闲置多长秒后关闭连接，如果指定为 0 ，表示关闭该功能")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("loglevel notice")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定日志记录级别，Redis 总共支持四个级别：debug、verbose、notice、warning，默认为 notice")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("logfile stdout")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("日志记录方式，默认为标准输出，如果配置 Redis 为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给 /dev/null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("databases 16")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置数据库的数量，默认数据库为16，可以使用SELECT 命令在连接上指定数据库id")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("save <seconds> <changes>")]),t._v(" "),a("br"),t._v("Redis 默认配置文件中提供了三个条件："),a("br"),a("code",[t._v("save 900 1")]),t._v(" "),a("br"),a("code",[t._v("save 300 10")]),t._v(" "),a("br"),a("code",[t._v("save 60 10000")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("分别表示 900 秒（15 分钟）内有 1 个更改，300 秒（5 分钟）内有 10 个更改"),a("br"),t._v("以及 60 秒内有 10000 个更改。指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("rdbcompression yes")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定存储至本地数据库时是否压缩数据，默认为 yes，"),a("br"),t._v("Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("dbfilename dump.rdb")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("rdb持久化的文件，默认为dump.rdb")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("dir ./")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("持久化文件的存放目录")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("slaveof <masterip> <masterport>")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置当本机为 slave 服务时，设置 master 服务的 IP 地址及端口，在 Redis 启动时，它会自动从 master 进行数据同步")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("masterauth <master-password>")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH 命令提供密码，默认关闭")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("maxclients 128")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("17")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("maxmemory <bytes>")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("18")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("appendonly no")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定是否在每次更新操作后进行日志记录，Redis 在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis 本身同步数据文件是按上面 save 条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为 no")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("appendfilename appendonly.aof")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定更新日志文件名，默认为 appendonly.aof")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("appendfsync everysec")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定更新日志条件，共有 3 个可选值："),a("br"),t._v("no：表示等操作系统进行数据缓存同步到磁盘（快）"),a("br"),t._v("always：表示每次更新操作后手动调用 fsync() 将数据写到磁盘（慢，安全）"),a("br"),t._v("everysec：表示每秒同步一次（折中，默认值）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-enabled no")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定是否启用虚拟内存机制，默认值为 no，简单的介绍一下，VM 机制将数据分页存放，由 Redis 将访问量较少的页即冷数据 swap 到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析 Redis 的 VM 机制）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-swap-file /tmp/redis.swap")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("虚拟内存文件路径，默认值为 /tmp/redis.swap，不可多个 Redis 实例共享")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("23")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-max-memory 0")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将所有大于 vm-max-memory 的数据存入虚拟内存，无论 vm-max-memory 设置多小，所有索引数据都是内存存储的(Redis 的索引数据 就是 keys)，也就是说，当 vm-max-memory 设置为 0 的时候，其实是所有 value 都存在于磁盘。默认值为 0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-page-size 32")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Redis swap 文件分成了很多的 page，一个对象可以保存在多个 page 上面，但一个 page 上不能被多个对象共享，vm-page-size 是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page 大小最好设置为 32 或者 64bytes；如果存储很大大对象，则可以使用更大的 page，如果不确定，就使用默认值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-pages 134217728")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置 swap 文件中的 page 数量，由于页表（一种表示页面空闲或使用的 bitmap）是在放在内存中的，，在磁盘上每 8 个 pages 将消耗 1byte 的内存。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("26")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("vm-max-threads 4")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("27")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("glueoutputbuf yes")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("28")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("hash-max-zipmap-entries 64"),a("br"),t._v("hash-max-zipmap-value 512")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("29")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("activerehashing yes")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定是否激活重置哈希，默认为开启")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("30")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("include /path/to/local.conf")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件")])])])])])}),[],!1,null,null,null);e.default=c.exports}}]);