(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{441:function(s,e,a){"use strict";a.r(e);var n=a(31),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("String是Redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。\nString类型是二进制安全的。意味着Redis的string可以包含任何数据。比如jpg图片或者序列化的对象。\nString类型是Redis最基本的数据类型，一个Redis中字符串value最多可以是512M")])]),s._v(" "),a("h2",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("String的数据结构为简单动态字符串(Simple Dynamic String,缩写SDS)。是可以修改的字符串，内部结构实现上类似于Java的ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配.")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blogImg/%E5%9B%BE%E7%89%871.png",alt:"图片1"}})]),s._v(" "),a("p",[s._v("如图中所示，内部为当前字符串实际分配的空间capacity一般要高于实际字符串长度len。当字符串长度小于1M时，扩容都是加倍现有的空间，如果超过1M，扩容时一次只会多扩1M的空间。需要注意的是字符串最大长度为512M。")]),s._v(" "),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-redis line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("set <key> <value>                  添加键值对\nget <key>                          查询对应的键值\nappend <key> <value>               将指定的value追加到原值的末尾\nstrlen <key>                       获取值的长度\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-redis line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("incr <key>               将key中存储的数字值增1\ndecr <key>               将key中存储的数字值减1\nincrby <key> <步长>      增加key中存储的数字，自定义步长\ndecrby <key> <步长>      获取值的长度\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("注意")]),s._v("：这里所有key的值必须都是数字")]),s._v(" "),a("div",{staticClass:"language-redis line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("getrange <key> <num> <num>       获取指定区间范围内的值，类似between....and的关系。\nsetrange <key> <num> <value>     设置指定区间范围内的值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"/blogImg/20210526121800.png",alt:"20210526121800.png"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"/blogImg/20210526122014.png",alt:"20210526122014.png"}})]),s._v(" "),a("div",{staticClass:"language-redis line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("setex <key> <num> <value>     添加一个key 赋值，并且指定存活时间\nsetnx <key> <value>          再添加时先判断key是否存在，存在返回0，不存在就添加\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"/blogImg/20210526122914.png",alt:"20210526122914.png"}})]),s._v(" "),a("div",{staticClass:"language-redis line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("同时设置一个或多个 key-value对\nmset  <key1> <value1> <key2> <value2>  .....          \n\n\n同时获取一个或多个 value  \nmget  <key1> <key2> <key3>  .....                      \n\n\n同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。\nmsetnx <key1> <value1> <key2> <value2>  .....   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);