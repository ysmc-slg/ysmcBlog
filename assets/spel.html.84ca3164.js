import{e as n}from"./app.d6129afb.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},p=n(`<h1 id="spel-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#spel-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> spel \u8868\u8FBE\u5F0F</h1><h2 id="\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6982\u5FF5" aria-hidden="true">#</a> \u6982\u5FF5</h2><p>Spring\u8868\u8FBE\u5F0F\u8BED\u8A00\u5168\u79F0\u4E3A\u201CSpring Expression Language\u201D\uFF0C\u7F29\u5199\u4E3A\u201CSpEL\u201D\uFF0C\u7C7B\u4F3C\u4E8EStruts2x\u4E2D\u4F7F\u7528\u7684OGNL\u8868\u8FBE\u5F0F\u8BED\u8A00\uFF0C\u80FD\u5728\u8FD0\u884C\u65F6\u6784\u5EFA\u590D\u6742\u8868\u8FBE\u5F0F\u3001\u5B58\u53D6\u5BF9\u8C61\u56FE\u5C5E\u6027\u3001\u5BF9\u8C61\u65B9\u6CD5\u8C03\u7528\u7B49\u7B49\uFF0C\u5E76\u4E14\u80FD\u4E0ESpring\u529F\u80FD\u5B8C\u7F8E\u6574\u5408\uFF0C\u5982\u80FD\u7528\u6765\u914D\u7F6EBean\u5B9A\u4E49\u3002</p><p>\u8868\u8FBE\u5F0F\u8BED\u8A00\u7ED9\u9759\u6001Java\u8BED\u8A00\u589E\u52A0\u4E86\u52A8\u6001\u529F\u80FD\u3002</p><p><code>SpEL\u662F\u5355\u72EC\u6A21\u5757\uFF0C\u53EA\u4F9D\u8D56\u4E8Ecore\u6A21\u5757\uFF0C\u4E0D\u4F9D\u8D56\u4E8E\u5176\u4ED6\u6A21\u5757\uFF0C\u53EF\u4EE5\u5355\u72EC\u4F7F\u7528\u3002</code></p><p>SpEL \u652F\u6301\u5982\u4E0B\u8868\u8FBE\u5F0F\uFF1A</p><ol><li>\u57FA\u672C\u8868\u8FBE\u5F0F\uFF1A \u5B57\u9762\u91CF\u8868\u8FBE\u5F0F\u3001\u5173\u7CFB\uFF0C\u903B\u8F91\u4E0E\u7B97\u6570\u8FD0\u7B97\u8868\u8FBE\u5F0F\u3001\u5B57\u7B26\u4E32\u8FDE\u63A5\u53CA\u622A\u53D6\u8868\u8FBE\u5F0F\u3001\u4E09\u76EE\u8FD0\u7B97\u53CAElivis\u8868\u8FBE\u5F0F\u3001\u6B63\u5219\u8868\u8FBE\u5F0F\u3001\u62EC\u53F7\u4F18\u5148\u7EA7\u8868\u8FBE\u5F0F\uFF1B</li><li>\u7C7B\u76F8\u5173\u8868\u8FBE\u5F0F\uFF1A \u7C7B\u7C7B\u578B\u8868\u8FBE\u5F0F\u3001\u7C7B\u5B9E\u4F8B\u5316\u3001instanceof\u8868\u8FBE\u5F0F\u3001\u53D8\u91CF\u5B9A\u4E49\u53CA\u5F15\u7528\u3001\u8D4B\u503C\u8868\u8FBE\u5F0F\u3001\u81EA\u5B9A\u4E49\u51FD\u6570\u3001\u5BF9\u8C61\u5C5E\u6027\u5B58\u53D6\u53CA\u5B89\u5168\u5BFC\u822A\u8868\u8FBE\u5F0F\u3001\u5BF9\u8C61\u65B9\u6CD5\u8C03\u7528\u3001Bean\u5F15\u7528\uFF1B</li><li>\u96C6\u5408\u76F8\u5173\u8868\u8FBE\u5F0F\uFF1A \u5185\u8054List\u3001\u5185\u8054\u6570\u7EC4\u3001\u96C6\u5408\uFF0C\u5B57\u5178\u8BBF\u95EE\u3001\u5217\u8868\uFF0C\u5B57\u5178\uFF0C\u6570\u7EC4\u4FEE\u6539\u3001\u96C6\u5408\u6295\u5F71\u3001\u96C6\u5408\u9009\u62E9\uFF1B\u4E0D\u652F\u6301\u591A\u7EF4\u5185\u8054\u6570\u7EC4\u521D\u59CB\u5316\uFF1B\u4E0D\u652F\u6301\u5185\u8054\u5B57\u5178\u5B9A\u4E49\uFF1B</li><li>\u5176\u4ED6\u8868\u8FBE\u5F0F\uFF1A\u6A21\u677F\u8868\u8FBE\u5F0F\u3002</li></ol><p><strong>\u6CE8\uFF1ASpEL\u8868\u8FBE\u5F0F\u4E2D\u7684\u5173\u952E\u5B57\u662F\u4E0D\u533A\u5206\u5927\u5C0F\u5199\u7684\u3002</strong></p><h2 id="\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840" aria-hidden="true">#</a> \u57FA\u7840</h2><h3 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld" aria-hidden="true">#</a> HelloWorld</h3><p>\u9996\u5148\u521B\u5EFA\u4E00\u4E2A springboot \u5DE5\u7A0B\uFF0C\u6DFB\u52A0springweb \u4F9D\u8D56\u3002</p><p>SpEL\u5728\u6C42\u8868\u8FBE\u5F0F\u503C\u65F6\u4E00\u822C\u5206\u4E3A\u56DB\u6B65\uFF0C\u5176\u4E2D\u7B2C\u4E09\u6B65\u53EF\u9009\uFF1A\u9996\u5148\u6784\u9020\u4E00\u4E2A\u89E3\u6790\u5668\uFF0C\u5176\u6B21\u89E3\u6790\u5668\u89E3\u6790\u5B57\u7B26\u4E32\u8868\u8FBE\u5F0F\uFF0C\u5728\u6B64\u6784\u9020\u4E0A\u4E0B\u6587\uFF0C\u6700\u540E\u6839\u636E\u4E0A\u4E0B\u6587\u5F97\u5230\u8868\u8FBE\u5F0F\u8FD0\u7B97\u540E\u7684\u503C\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">SpelDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span><span class="token string">&quot;(&#39;Hello&#39; + &#39; World&#39;).concat(#end)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>Hello World!
</code></pre></div><ol><li>\u521B\u5EFA\u89E3\u6790\u5668\uFF1ASpEL\u4F7F\u7528 <code>ExpressionParser</code> \u63A5\u53E3\u8868\u793A\u89E3\u6790\u5668\uFF0C\u63D0\u4F9B <code>SpelExpressionParser</code> \u9ED8\u8BA4\u5B9E\u73B0\uFF1B</li><li>\u89E3\u6790\u8868\u8FBE\u5F0F\uFF1A\u4F7F\u7528 <code>ExpressionParser</code> \u7684 <code>parseExpression</code> \u6765\u89E3\u6790\u76F8\u5E94\u7684\u8868\u8FBE\u5F0F\u4E3A <code>Expression</code> \u5BF9\u8C61\u3002</li><li>\u6784\u9020\u4E0A\u4E0B\u6587\uFF1A\u51C6\u5907\u6BD4\u5982\u53D8\u91CF\u5B9A\u4E49\u7B49\u7B49\u8868\u8FBE\u5F0F\u9700\u8981\u7684\u4E0A\u4E0B\u6587\u6570\u636E\u3002</li><li>\u6C42\u503C\uFF1A\u901A\u8FC7Expression\u63A5\u53E3\u7684getValue\u65B9\u6CD5\u6839\u636E\u4E0A\u4E0B\u6587\u83B7\u5F97\u8868\u8FBE\u5F0F\u503C\u3002</li></ol><h2 id="\u83B7\u53D6\u7C7B\u4E2D\u7684\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7C7B\u4E2D\u7684\u5C5E\u6027" aria-hidden="true">#</a> \u83B7\u53D6\u7C7B\u4E2D\u7684\u5C5E\u6027</h2><p>\u9996\u5148\u521B\u5EFA\u4E00\u4E2A user \u7C7B\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u83B7\u53D6 user \u7C7B\u7684 <code>username</code> \u5C5E\u6027\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u4E2A\u8868\u8FBE\u5F0F\u7684\u542B\u4E49\u8868\u793A\u8C03\u7528user\u5BF9\u8C61\u4E2D\u7684username\u5C5E\u6027</span>
    <span class="token class-name">String</span> exp <span class="token operator">=</span> <span class="token string">&quot;#user.username&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">SpelExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;zxq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D4E\u5357&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u4E0A\u4E0B\u6587\u73AF\u5883\u5E76\u8BBE\u7F6E\u503C</span>
    <span class="token class-name">StandardEvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> value <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>expression.getValue\uFF1A\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E0A\u4E0B\u6587\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u3002</p><p><code>#user</code> \u8981\u5BF9\u5E94 <code>context.setVariable</code> \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u8868\u8FBE\u5F0F\u4E5F\u53EF\u4EE5\u4E0D\u5199<code>#user</code> \u76F4\u63A5\u5199\u8981\u83B7\u53D6\u7684\u5C5E\u6027\uFF0C\u4EE3\u7801\u5982\u4E0B</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u4E2A\u8868\u8FBE\u5F0F\u7684\u542B\u4E49\u8868\u793A\u8C03\u7528user\u5BF9\u8C61\u4E2D\u7684username\u5C5E\u6027</span>
    <span class="token class-name">String</span> exp <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">SpelExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;zxq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D4E\u5357&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u4E0A\u4E0B\u6587\u73AF\u5883\u5E76\u8BBE\u7F6E\u503C</span>
    <span class="token class-name">StandardEvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">setRootObject</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> value <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6B64\u65F6\u5728\u8BBE\u7F6E\u4E0A\u4E0B\u6587\u662F\u9700\u8981\u8C03\u7528 <code>context.setRootObject</code> \u5C06 user \u8BBE\u7F6E\u4E3A <code>RootObject</code>\uFF0C\u8FD9\u6837\u673A\u4F1A\u76F4\u63A5\u83B7\u53D6user \u5BF9\u8C61\u4E2D\u7684 username \u5C5E\u6027\u3002</p><h2 id="\u8C03\u7528\u7C7B\u4E2D\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528\u7C7B\u4E2D\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u8C03\u7528\u7C7B\u4E2D\u7684\u65B9\u6CD5</h2><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sayhello</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> exp <span class="token operator">=</span> <span class="token string">&quot;#us.sayhello(\\&quot;zxq\\&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">SpelExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u89E3\u6790</span>
    <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521B\u5EFA\u4E0A\u4E0B\u6587\u73AF\u5883\u5E76\u8BBE\u7F6E\u503C</span>
    <span class="token class-name">StandardEvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UserService</span> us <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;us&quot;</span><span class="token punctuation">,</span>us<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> value <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u540C\u6837\u4E5F\u53EF\u4EE5\u4E0D\u5199 <code>#us</code>\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> exp <span class="token operator">=</span> <span class="token string">&quot;sayhello(\\&quot;zxq\\&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">SpelExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u89E3\u6790</span>
    <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521B\u5EFA\u4E0A\u4E0B\u6587\u73AF\u5883\u5E76\u8BBE\u7F6E\u503C</span>
    <span class="token class-name">StandardEvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UserService</span> us <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">setRootObject</span><span class="token punctuation">(</span>us<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> value <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="bean-\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#bean-\u5F15\u7528" aria-hidden="true">#</a> Bean \u5F15\u7528</h2><p>\u9996\u5148\u521B\u5EFA\u4E00\u4E2A\u7C7B\uFF0C\u4EA4\u7ED9spring\u5BB9\u5668\u7BA1\u7406</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;bs&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookService</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u8FD9\u662F\u4E00\u672C\u597D\u4E66&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">SpelDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">BeanFactory</span> beanFactory<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> exp <span class="token operator">=</span> <span class="token string">&quot;@bs.sayHello()&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">SpelExpressionParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpelExpressionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u89E3\u6790</span>
        <span class="token class-name">Expression</span> expression <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u521B\u5EFA\u4E0A\u4E0B\u6587\u73AF\u5883\u5E76\u8BBE\u7F6E\u503C</span>
        <span class="token class-name">StandardEvaluationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEvaluationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">setBeanResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanFactoryResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> value <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div><p>SpEL\u652F\u6301\u4F7F\u7528\u201C@\u201D\u7B26\u53F7\u6765\u5F15\u7528Bean\uFF0C\u5728\u5F15\u7528Bean\u65F6\u9700\u8981\u4F7F\u7528BeanResolver\u63A5\u53E3\u5B9E\u73B0\u6765\u67E5\u627EBean\uFF0CSpring\u63D0\u4F9BBeanFactoryResolver\u5B9E\u73B0\u3002</p><p><code>@bs</code> bs \u4E3A Bean \u7684\u540D\u79F0</p>`,36);function t(o,e){return p}var u=s(a,[["render",t]]);export{u as default};
