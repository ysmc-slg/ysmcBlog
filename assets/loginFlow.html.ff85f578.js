import{e as n}from"./app.8ff99d9c.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},t=n(`<h1 id="springsecurity-\u767B\u5F55\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#springsecurity-\u767B\u5F55\u6D41\u7A0B" aria-hidden="true">#</a> SpringSecurity \u767B\u5F55\u6D41\u7A0B</h1><h2 id="\u767B\u5F55\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u767B\u5F55\u6D41\u7A0B" aria-hidden="true">#</a> \u767B\u5F55\u6D41\u7A0B</h2><p>\u5728 <code>Spring Security</code> \u4E2D\uFF0C\u7528\u6237\u540D\u548C\u5BC6\u7801\u767B\u5F55\u65B9\u5F0F\uFF0C\u8BA4\u8BC1\u4E0E\u6388\u6743\u7684\u76F8\u5173\u6821\u9A8C\u90FD\u662F\u5728\u4E00\u7CFB\u5217\u7684\u8FC7\u6EE4\u5668\u94FE\u4E2D\u5B8C\u6210\u7684\uFF0C\u5728\u8FD9\u4E00\u7CFB\u5217\u7684\u8FC7\u6EE4\u5668\u94FE\u4E2D\uFF0C\u548C\u8BA4\u8BC1\u76F8\u5173\u7684\u8FC7\u6EE4\u5668\u5C31\u662F UsernamePasswordAuthenticationFilter\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsernamePasswordAuthenticationFilter</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAuthenticationProcessingFilter</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> SPRING_SECURITY_FORM_USERNAME_KEY <span class="token operator">=</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> SPRING_SECURITY_FORM_PASSWORD_KEY <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">AntPathRequestMatcher</span> DEFAULT_ANT_PATH_REQUEST_MATCHER <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AntPathRequestMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span>
			<span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> usernameParameter <span class="token operator">=</span> SPRING_SECURITY_FORM_USERNAME_KEY<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> passwordParameter <span class="token operator">=</span> SPRING_SECURITY_FORM_PASSWORD_KEY<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> postOnly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">UsernamePasswordAuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span>DEFAULT_ANT_PATH_REQUEST_MATCHER<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">UsernamePasswordAuthenticationFilter</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManager</span> authenticationManager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span>DEFAULT_ANT_PATH_REQUEST_MATCHER<span class="token punctuation">,</span> authenticationManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>postOnly <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AuthenticationServiceException</span><span class="token punctuation">(</span><span class="token string">&quot;Authentication method not supported: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token function">obtainUsername</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
		username <span class="token operator">=</span> <span class="token punctuation">(</span>username <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> username <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		username <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token function">obtainPassword</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
		password <span class="token operator">=</span> <span class="token punctuation">(</span>password <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> password <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">UsernamePasswordAuthenticationToken</span> authRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// Allow subclasses to set the &quot;details&quot; property</span>
		<span class="token function">setDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> authRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAuthenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">obtainPassword</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>passwordParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">obtainUsername</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usernameParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span> authRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		authRequest<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>authenticationDetailsSource<span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token comment">// ......</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6839\u636E\u8FD9\u6BB5\u6E90\u7801\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF1A</p><ol><li>\u9996\u5148\u901A\u8FC7 <code>obtainUsername</code> \u548C <code>obtainPassword</code> \u65B9\u6CD5\u63D0\u53D6\u51FA\u8BF7\u6C42\u91CC\u8FB9\u7684\u7528\u6237\u540D/\u5BC6\u7801\u51FA\u6765\uFF0C\u63D0\u53D6\u65B9\u5F0F\u5C31\u662F request.getParameter \uFF0C\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48 Spring Security \u4E2D\u9ED8\u8BA4\u7684\u8868\u5355\u767B\u5F55\u8981\u901A\u8FC7 <code>key/value</code> \u7684\u5F62\u5F0F\u4F20\u9012\u53C2\u6570\uFF0C\u800C\u4E0D\u80FD\u4F20\u9012 JSON \u53C2\u6570\uFF0C\u5982\u679C\u50CF\u4F20\u9012 JSON \u53C2\u6570\uFF0C\u4FEE\u6539\u8FD9\u91CC\u7684\u903B\u8F91\u5373\u53EF\u3002</li><li>\u83B7\u53D6\u5230\u8BF7\u6C42\u91CC\u4F20\u9012\u6765\u7684\u7528\u6237\u540D/\u5BC6\u7801\u4E4B\u540E\uFF0C\u63A5\u4E0B\u6765\u5C31\u6784\u9020\u4E00\u4E2A <code>UsernamePasswordAuthenticationToken</code> \u5BF9\u8C61\uFF0C\u4F20\u5165 <code>username</code> \u548C <code>password</code>\uFF0C<code>username</code> \u5BF9\u5E94\u4E86 <code>UsernamePasswordAuthenticationToken</code> \u4E2D\u7684 <code>principal</code> \u5C5E\u6027\uFF0C\u800C <code>password</code> \u5219\u5BF9\u5E94\u4E86\u5B83\u7684 <code>credentials</code> \u5C5E\u6027\u3002</li><li>\u63A5\u4E0B\u6765 <code>setDetails</code> \u65B9\u6CD5\u7ED9 <code>details</code> \u5C5E\u6027\u8D4B\u503C\uFF0C<code>UsernamePasswordAuthenticationToken</code> \u672C\u8EAB\u662F\u6CA1\u6709 <code>details</code> \u5C5E\u6027\u7684\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u5728\u5B83\u7684\u7236\u7C7B <code>AbstractAuthenticationToken</code> \u4E2D\u3002<code>details</code> \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u91CC\u8FB9\u653E\u7684\u662F <code>WebAuthenticationDetails</code> \u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u4E3B\u8981\u63CF\u8FF0\u4E86\u4E24\u4E2A\u4FE1\u606F\uFF0C\u8BF7\u6C42\u7684 <code>remoteAddress</code> \u4EE5\u53CA\u8BF7\u6C42\u7684 <code>sessionId</code>\u3002</li><li>\u6700\u540E\u4E00\u6B65\uFF0C\u5C31\u662F\u8C03\u7528 authenticate \u65B9\u6CD5\u53BB\u505A\u6821\u9A8C\u4E86\u3002</li></ol><p>\u597D\u4E86\uFF0C\u4ECE\u8FD9\u6BB5\u6E90\u7801\u4E2D\uFF0C\u5927\u5BB6\u53EF\u4EE5\u770B\u51FA\u6765\u8BF7\u6C42\u7684\u5404\u79CD\u4FE1\u606F\u57FA\u672C\u4E0A\u90FD\u627E\u5230\u4E86\u81EA\u5DF1\u7684\u4F4D\u7F6E\uFF0C\u627E\u5230\u4E86\u4F4D\u7F6E\uFF0C\u8FD9\u5C31\u65B9\u4FBF\u6211\u4EEC\u672A\u6765\u53BB\u83B7\u53D6\u4E86\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u518D\u6765\u770B\u8BF7\u6C42\u7684\u5177\u4F53\u6821\u9A8C\u64CD\u4F5C\u3002</p><p>\u5728\u524D\u9762\u7684 <code>UsernamePasswordAuthenticationFilter#attemptAuthentication</code> \u65B9\u6CD5\u4E2D\uFF0C\u8BE5\u65B9\u6CD5\u7684\u6700\u540E\u4E00\u6B65\u5F00\u59CB\u505A\u6821\u9A8C\uFF0C\u6821\u9A8C\u64CD\u4F5C\u9996\u5148\u8981\u83B7\u53D6\u5230\u4E00\u4E2A <code>AuthenticationManager</code>\uFF0C\u8FD9\u91CC\u62FF\u5230\u7684\u662F <code>ProviderManager</code> \uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u8FDB\u5165\u5230 <code>ProviderManager</code> \u7684 <code>authenticate</code> \u65B9\u6CD5\u4E2D\uFF0C\u5F53\u7136\u8FD9\u4E2A\u65B9\u6CD5\u4E5F\u6BD4\u8F83\u957F\uFF0C\u6211\u8FD9\u91CC\u4EC5\u4EC5\u6458\u5217\u51FA\u6765\u51E0\u4E2A\u91CD\u8981\u7684\u5730\u65B9\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
	<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Authentication</span><span class="token punctuation">&gt;</span></span> toTest <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationProvider</span> provider <span class="token operator">:</span> <span class="token function">getProviders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>provider<span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span>toTest<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		result <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">copyDetails</span><span class="token punctuation">(</span>authentication<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		result <span class="token operator">=</span> parentResult <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>eraseCredentialsAfterAuthentication
				<span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">CredentialsContainer</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CredentialsContainer</span><span class="token punctuation">)</span> result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eraseCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>parentResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			eventPublisher<span class="token punctuation">.</span><span class="token function">publishAuthenticationSuccess</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">throw</span> lastException<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol><li>\u9996\u5148\u83B7\u53D6 authentication \u7684 Class\uFF0C\u5224\u65AD\u5F53\u524D provider \u662F\u5426\u652F\u6301\u8BE5 authentication\u3002</li><li>\u5982\u679C\u652F\u6301\uFF0C\u5219\u8C03\u7528 provider \u7684 authenticate \u65B9\u6CD5\u5F00\u59CB\u505A\u6821\u9A8C\uFF0C\u6821\u9A8C\u5B8C\u6210\u540E\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Authentication\u3002\u4E00\u4F1A\u6765\u548C\u5927\u5BB6\u634B\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5177\u4F53\u903B\u8F91\u3002</li><li>\u8FD9\u91CC\u7684 provider \u53EF\u80FD\u6709\u591A\u4E2A\uFF0C\u5982\u679C provider \u7684 authenticate \u65B9\u6CD5\u6CA1\u80FD\u6B63\u5E38\u8FD4\u56DE\u4E00\u4E2A Authentication\uFF0C\u5219\u8C03\u7528 provider \u7684 parent \u7684 authenticate \u65B9\u6CD5\u7EE7\u7EED\u6821\u9A8C\u3002</li><li>copyDetails \u65B9\u6CD5\u5219\u7528\u6765\u628A\u65E7\u7684 Token \u7684 details \u5C5E\u6027\u62F7\u8D1D\u5230\u65B0\u7684 Token \u4E2D\u6765\u3002</li><li>\u63A5\u4E0B\u6765\u4F1A\u8C03\u7528 eraseCredentials \u65B9\u6CD5\u64E6\u9664\u51ED\u8BC1\u4FE1\u606F\uFF0C\u4E5F\u5C31\u662F\u4F60\u7684\u5BC6\u7801\uFF0C\u8FD9\u4E2A\u64E6\u9664\u65B9\u6CD5\u6BD4\u8F83\u7B80\u5355\uFF0C\u5C31\u662F\u5C06 Token \u4E2D\u7684 credentials \u5C5E\u6027\u7F6E\u7A7A\u3002</li><li>\u6700\u540E\u901A\u8FC7 publishAuthenticationSuccess \u65B9\u6CD5\u5C06\u767B\u5F55\u6210\u529F\u7684\u4E8B\u4EF6\u5E7F\u64AD\u51FA\u53BB\u3002</li></ol><p>\u5927\u81F4\u7684\u6D41\u7A0B\uFF0C\u5C31\u662F\u4E0A\u9762\u8FD9\u6837\uFF0C\u5728 for \u5FAA\u73AF\u4E2D\uFF0C\u7B2C\u4E00\u6B21\u62FF\u5230\u7684 provider \u662F\u4E00\u4E2A AnonymousAuthenticationProvider\uFF0C\u8FD9\u4E2A provider \u538B\u6839\u5C31\u4E0D\u652F\u6301 UsernamePasswordAuthenticationToken\uFF0C\u4E5F\u5C31\u662F\u4F1A\u76F4\u63A5\u5728 provider.supports \u65B9\u6CD5\u4E2D\u8FD4\u56DE false\uFF0C\u7ED3\u675F for \u5FAA\u73AF\uFF0C\u7136\u540E\u4F1A\u8FDB\u5165\u5230\u4E0B\u4E00\u4E2A if \u4E2D\uFF0C\u76F4\u63A5\u8C03\u7528 parent \u7684 authenticate \u65B9\u6CD5\u8FDB\u884C\u6821\u9A8C\u3002</p><p>\u800C parent \u5C31\u662F ProviderManager\uFF0C\u6240\u4EE5\u4F1A\u518D\u6B21\u56DE\u5230\u8FD9\u4E2A authenticate \u65B9\u6CD5\u4E2D\u3002\u518D\u6B21\u56DE\u5230 authenticate \u65B9\u6CD5\u4E2D\uFF0Cprovider \u4E5F\u53D8\u6210\u4E86 DaoAuthenticationProvider\uFF0C\u8FD9\u4E2A provider \u662F\u652F\u6301 UsernamePasswordAuthenticationToken \u7684\uFF0C\u6240\u4EE5\u4F1A\u987A\u5229\u8FDB\u5165\u5230\u8BE5\u7C7B\u7684 authenticate \u65B9\u6CD5\u53BB\u6267\u884C\uFF0C\u800C DaoAuthenticationProvider \u7EE7\u627F\u81EA AbstractUserDetailsAuthenticationProvider \u5E76\u4E14\u6CA1\u6709\u91CD\u5199 authenticate \u65B9\u6CD5\uFF0C\u6240\u4EE5 \u6211\u4EEC\u6700\u7EC8\u6765\u5230 AbstractUserDetailsAuthenticationProvider#authenticate \u65B9\u6CD5\u4E2D\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractUserDetailsAuthenticationProvider</span>
		<span class="token keyword">implements</span> <span class="token class-name">AuthenticationProvider</span><span class="token punctuation">,</span> <span class="token class-name">InitializingBean</span><span class="token punctuation">,</span> <span class="token class-name">MessageSourceAware</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
	<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;NONE_PROVIDED&quot;</span> <span class="token operator">:</span> authentication<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	user <span class="token operator">=</span> <span class="token function">retrieveUser</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
	preAuthenticationChecks<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">additionalAuthenticationChecks</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
	postAuthenticationChecks<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Object</span> principalToReturn <span class="token operator">=</span> user<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>forcePrincipalAsString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		principalToReturn <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">createSuccessAuthentication</span><span class="token punctuation">(</span>principalToReturn<span class="token punctuation">,</span> authentication<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u7684\u903B\u8F91\u5C31\u6BD4\u8F83\u7B80\u5355\u4E86\uFF1A</p><ol><li><p>\u9996\u5148\u4ECE Authentication \u63D0\u53D6\u51FA\u767B\u5F55\u7528\u6237\u540D\u3002</p></li><li><p>\u7136\u540E\u901A\u8FC7\u62FF\u7740 username \u53BB\u8C03\u7528 retrieveUser \u65B9\u6CD5\u53BB\u83B7\u53D6\u5F53\u524D\u7528\u6237\u5BF9\u8C61\uFF0C\u8FD9\u4E00\u6B65\u4F1A\u8C03\u7528\u6211\u4EEC\u81EA\u5DF1\u5728\u767B\u5F55\u65F6\u5019\u7684\u5199\u7684 UserDetailsService \u5B9E\u73B0\u7C7B\u7684 loadUserByUsername \u65B9\u6CD5\uFF0C\u6240\u4EE5\u8FD9\u91CC\u8FD4\u56DE\u7684 user \u5176\u5B9E\u5C31\u662F\u4F60\u7684\u767B\u5F55\u5BF9\u8C61</p></li><li><p>\u63A5\u4E0B\u6765\u8C03\u7528 preAuthenticationChecks.check \u65B9\u6CD5\u53BB\u68C0\u9A8C user \u4E2D\u7684\u5404\u4E2A\u8D26\u6237\u72B6\u6001\u5C5E\u6027\u662F\u5426\u6B63\u5E38\uFF0C\u4F8B\u5982\u8D26\u6237\u662F\u5426\u88AB\u7981\u7528\u3001\u8D26\u6237\u662F\u5426\u88AB\u9501\u5B9A\u3001\u8D26\u6237\u662F\u5426\u8FC7\u671F\u7B49\u7B49\u3002</p></li><li><p>additionalAuthenticationChecks \u65B9\u6CD5\u5219\u662F\u505A\u5BC6\u7801\u6BD4\u5BF9\u7684\uFF0C\u597D\u591A\u5C0F\u4F19\u4F34\u597D\u5947 Spring Security \u7684\u5BC6\u7801\u52A0\u5BC6\u4E4B\u540E\uFF0C\u662F\u5982\u4F55\u8FDB\u884C\u6BD4\u8F83\u7684\uFF0C\u770B\u8FD9\u91CC\u5C31\u61C2\u4E86\uFF0C\u56E0\u4E3A\u6BD4\u8F83\u7684\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u6211\u8FD9\u91CC\u5C31\u4E0D\u8D34\u4EE3\u7801\u51FA\u6765\u4E86\u3002</p></li><li><p>\u6700\u540E\u5728 postAuthenticationChecks.check \u65B9\u6CD5\u4E2D\u68C0\u67E5\u5BC6\u7801\u662F\u5426\u8FC7\u671F\u3002</p></li><li><p>\u63A5\u4E0B\u6765\u6709\u4E00\u4E2A forcePrincipalAsString \u5C5E\u6027\uFF0C\u8FD9\u4E2A\u662F\u662F\u5426\u5F3A\u5236\u5C06 Authentication \u4E2D\u7684 principal \u5C5E\u6027\u8BBE\u7F6E\u4E3A\u5B57\u7B26\u4E32\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u6211\u4EEC\u4E00\u5F00\u59CB\u5728 UsernamePasswordAuthenticationFilter \u7C7B\u4E2D\u5176\u5B9E\u5C31\u662F\u8BBE\u7F6E\u4E3A\u5B57\u7B26\u4E32\u7684\uFF08\u5373 username\uFF09\uFF0C\u4F46\u662F\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5F53\u7528\u6237\u767B\u5F55\u6210\u529F\u4E4B\u540E\uFF0C \u8FD9\u4E2A\u5C5E\u6027\u7684\u503C\u5C31\u53D8\u6210\u5F53\u524D\u7528\u6237\u8FD9\u4E2A\u5BF9\u8C61\u4E86\u3002\u4E4B\u6240\u4EE5\u4F1A\u8FD9\u6837\uFF0C\u5C31\u662F\u56E0\u4E3A forcePrincipalAsString \u9ED8\u8BA4\u4E3A false\uFF0C\u4E0D\u8FC7\u8FD9\u5757\u5176\u5B9E\u4E0D\u7528\u6539\uFF0C\u5C31\u7528 false\uFF0C\u8FD9\u6837\u5728\u540E\u671F\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u7684\u65F6\u5019\u53CD\u800C\u65B9\u4FBF\u5F88\u591A\u3002</p></li><li><p>\u6700\u540E\uFF0C\u901A\u8FC7 createSuccessAuthentication \u65B9\u6CD5\u6784\u5EFA\u4E00\u4E2A\u65B0\u7684 UsernamePasswordAuthenticationToken\u3002</p></li></ol><p>\u597D\u4E86\uFF0C\u90A3\u4E48\u767B\u5F55\u7684\u6821\u9A8C\u6D41\u7A0B\u73B0\u5728\u5C31\u57FA\u672C\u548C\u5927\u5BB6\u634B\u4E86\u4E00\u904D\u4E86\u3002\u90A3\u4E48\u63A5\u4E0B\u6765\u8FD8\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u767B\u5F55\u7684\u7528\u6237\u4FE1\u606F\u6211\u4EEC\u53BB\u54EA\u91CC\u67E5\u627E\uFF1F</p><h2 id="\u7528\u6237\u4FE1\u606F\u4FDD\u5B58" tabindex="-1"><a class="header-anchor" href="#\u7528\u6237\u4FE1\u606F\u4FDD\u5B58" aria-hidden="true">#</a> \u7528\u6237\u4FE1\u606F\u4FDD\u5B58</h2><p>\u8981\u53BB\u627E\u767B\u5F55\u7684\u7528\u6237\u4FE1\u606F\uFF0C\u6211\u4EEC\u5F97\u5148\u6765\u89E3\u51B3\u4E00\u4E2A\u95EE\u9898\uFF0C\u5C31\u662F\u4E0A\u9762\u6211\u4EEC\u8BF4\u4E86\u8FD9\u4E48\u591A\uFF0C\u8FD9\u4E00\u5207\u662F\u4ECE\u54EA\u91CC\u5F00\u59CB\u88AB\u89E6\u53D1\u7684\uFF1F</p><p>\u6211\u4EEC\u6765\u5230 UsernamePasswordAuthenticationFilter \u7684\u7236\u7C7B AbstractAuthenticationProcessingFilter \u4E2D\uFF0C\u8FD9\u4E2A\u7C7B\u6211\u4EEC\u7ECF\u5E38\u4F1A\u89C1\u5230\uFF0C\u56E0\u4E3A\u5F88\u591A\u65F6\u5019\u5F53\u6211\u4EEC\u60F3\u8981\u5728 Spring Security \u81EA\u5B9A\u4E49\u4E00\u4E2A\u767B\u5F55\u9A8C\u8BC1\u7801\u6216\u8005\u5C06\u767B\u5F55\u53C2\u6570\u6539\u4E3A JSON \u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u90FD\u9700\u81EA\u5B9A\u4E49\u8FC7\u6EE4\u5668\u7EE7\u627F\u81EA AbstractAuthenticationProcessingFilter \uFF0C\u6BEB\u65E0\u7591\u95EE\uFF0CUsernamePasswordAuthenticationFilter#attemptAuthentication \u65B9\u6CD5\u5C31\u662F\u5728 AbstractAuthenticationProcessingFilter \u7C7B\u7684 doFilter \u65B9\u6CD5\u4E2D\u88AB\u89E6\u53D1\u7684\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> res<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
	<span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> req<span class="token punctuation">;</span>
	<span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> res<span class="token punctuation">;</span>
	<span class="token class-name">Authentication</span> authResult<span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		authResult <span class="token operator">=</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>authResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		sessionStrategy<span class="token punctuation">.</span><span class="token function">onAuthentication</span><span class="token punctuation">(</span>authResult<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InternalAuthenticationServiceException</span> failed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">unsuccessfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationException</span> failed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">unsuccessfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>continueChainBeforeSuccessfulAuthentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">successfulAuthentication</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5F53 attemptAuthentication \u65B9\u6CD5\u88AB\u8C03\u7528\u65F6\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u89E6\u53D1\u4E86 UsernamePasswordAuthenticationFilter#attemptAuthentication \u65B9\u6CD5\uFF0C\u5F53\u767B\u5F55\u629B\u51FA\u5F02\u5E38\u7684\u65F6\u5019\uFF0CunsuccessfulAuthentication \u65B9\u6CD5\u4F1A\u88AB\u8C03\u7528\uFF0C\u800C\u5F53\u767B\u5F55\u6210\u529F\u7684\u65F6\u5019\uFF0CsuccessfulAuthentication \u65B9\u6CD5\u5219\u4F1A\u88AB\u8C03\u7528\uFF0C\u90A3\u6211\u4EEC\u5C31\u6765\u770B\u4E00\u770B successfulAuthentication \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">successfulAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
		<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">,</span> <span class="token class-name">Authentication</span> authResult<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
	<span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
	rememberMeServices<span class="token punctuation">.</span><span class="token function">loginSuccess</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Fire event</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eventPublisher <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InteractiveAuthenticationSuccessEvent</span><span class="token punctuation">(</span>
				authResult<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	successHandler<span class="token punctuation">.</span><span class="token function">onAuthenticationSuccess</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\u6709\u4E00\u6BB5\u5F88\u91CD\u8981\u7684\u4EE3\u7801\uFF0C\u5C31\u662F SecurityContextHolder.getContext().setAuthentication(authResult); \uFF0C\u767B\u5F55\u6210\u529F\u7684\u7528\u6237\u4FE1\u606F\u88AB\u4FDD\u5B58\u5728\u8FD9\u91CC\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u4EFB\u4F55\u5730\u65B9\uFF0C\u5982\u679C\u6211\u4EEC\u60F3\u83B7\u53D6\u7528\u6237\u767B\u5F55\u4FE1\u606F\uFF0C\u90FD\u53EF\u4EE5\u4ECE SecurityContextHolder.getContext() \u4E2D\u83B7\u53D6\u5230\uFF0C\u60F3\u4FEE\u6539\uFF0C\u4E5F\u53EF\u4EE5\u5728\u8FD9\u91CC\u4FEE\u6539\u3002</p><p>\u6700\u540E\u5927\u5BB6\u8FD8\u770B\u5230\u6709\u4E00\u4E2A successHandler.onAuthenticationSuccess\uFF0C\u8FD9\u5C31\u662F\u6211\u4EEC\u5728 SecurityConfig \u4E2D\u914D\u7F6E\u767B\u5F55\u6210\u529F\u56DE\u8C03\u65B9\u6CD5\uFF0C\u5C31\u662F\u5728\u8FD9\u91CC\u88AB\u89E6\u53D1\u7684\u3002</p>`,25);function p(e,o){return t}var l=s(a,[["render",p]]);export{l as default};
